{
  "groups": [
    {
      "name": "camel.component.infinispan",
      "type": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    },
    {
      "name": "camel.component.infinispan.default-value",
      "type": "java.lang.Object",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "sourceMethod": "getDefaultValue()"
    },
    {
      "name": "camel.component.infinispan.key",
      "type": "java.lang.Object",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "sourceMethod": "getKey()"
    },
    {
      "name": "camel.component.infinispan.old-value",
      "type": "java.lang.Object",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "sourceMethod": "getOldValue()"
    },
    {
      "name": "camel.component.infinispan.value",
      "type": "java.lang.Object",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "sourceMethod": "getValue()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.infinispan.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.infinispan.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions (if possible) occurred while the Camel consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. Important: This is only possible if the 3rd party component allows Camel to be alerted if an exception was thrown. Some components handle this internally only, and therefore bridgeErrorHandler is not possible. In other situations we may improve the Camel component to hook into the 3rd party component and make this possible for future releases. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.infinispan.cache-container",
      "type": "org.infinispan.client.hotrod.RemoteCacheManager",
      "description": "Specifies the cache Container to connect. The option is a org.infinispan.client.hotrod.RemoteCacheManager type.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.cache-container-configuration",
      "type": "org.infinispan.client.hotrod.configuration.Configuration",
      "description": "The CacheContainer configuration. Used if the cacheContainer is not defined. The option is a org.infinispan.client.hotrod.configuration.Configuration type.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.configuration",
      "type": "org.apache.camel.component.infinispan.remote.InfinispanRemoteConfiguration",
      "description": "Component configuration. The option is a org.apache.camel.component.infinispan.remote.InfinispanRemoteConfiguration type.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.configuration-properties",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Implementation specific properties for the CacheManager",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.configuration-uri",
      "type": "java.lang.String",
      "description": "An implementation specific URI for the CacheManager",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.custom-listener",
      "type": "org.apache.camel.component.infinispan.remote.InfinispanRemoteCustomListener",
      "description": "Returns the custom listener in use, if provided. The option is a org.apache.camel.component.infinispan.remote.InfinispanRemoteCustomListener type.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.infinispan.embedding-store-dimension",
      "type": "java.lang.Integer",
      "description": "The dimension size used to store vector embeddings. This should be equal to the dimension size of the model used to create the vector embeddings. This option is mandatory if the embedding store is enabled.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.embedding-store-distance",
      "type": "java.lang.Integer",
      "description": "The distance to use for kNN search queries in relation to the configured vector similarity.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "defaultValue": 3
    },
    {
      "name": "camel.component.infinispan.embedding-store-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable the embedding store. When enabled, the embedding store will be configured automatically when Camel starts. Note that this feature requires camel-langchain4j-embeddings to be on the classpath.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.infinispan.embedding-store-register-schema",
      "type": "java.lang.Boolean",
      "description": "Whether to automatically register the proto schema for the types required by embedding store cache put and query operations.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.infinispan.embedding-store-type-name",
      "type": "java.lang.String",
      "description": "The name of the type used to store embeddings. The default is 'InfinispanRemoteEmbedding' suffixed with the value of the embeddingStoreDimension option. E.g. CamelInfinispanRemoteEmbedding384.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.embedding-store-vector-similarity",
      "type": "org.infinispan.api.annotations.indexing.option.VectorSimilarity",
      "description": "The vector similarity algorithm used to store embeddings.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "defaultValue": "cosine"
    },
    {
      "name": "camel.component.infinispan.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the infinispan component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.event-types",
      "type": "java.lang.String",
      "description": "Specifies the set of event types to register by the consumer.Multiple event can be separated by comma. The possible event types are: CLIENT_CACHE_ENTRY_CREATED, CLIENT_CACHE_ENTRY_MODIFIED, CLIENT_CACHE_ENTRY_REMOVED, CLIENT_CACHE_ENTRY_EXPIRED, CLIENT_CACHE_FAILOVER",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.flags",
      "type": "java.lang.String",
      "description": "A comma separated list of org.infinispan.client.hotrod.Flag to be applied by default on each cache invocation.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.hosts",
      "type": "java.lang.String",
      "description": "Specifies the host of the cache on Infinispan instance. Multiple hosts can be separated by semicolon.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.infinispan.operation",
      "type": "org.apache.camel.component.infinispan.InfinispanOperation",
      "description": "The operation to perform",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "defaultValue": "put"
    },
    {
      "name": "camel.component.infinispan.password",
      "type": "java.lang.String",
      "description": "Define the password to access the infinispan instance",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.query-builder",
      "type": "org.apache.camel.component.infinispan.InfinispanQueryBuilder",
      "description": "Specifies the query builder. The option is a org.apache.camel.component.infinispan.InfinispanQueryBuilder type.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.remapping-function",
      "type": "java.util.function.BiFunction",
      "description": "Set a specific remappingFunction to use in a compute operation. The option is a java.util.function.BiFunction type.",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.result-header",
      "type": "java.lang.String",
      "description": "Store the operation result in a header instead of the message body. By default, resultHeader == null and the query result is stored in the message body, any existing content in the message body is discarded. If resultHeader is set, the value is used as the name of the header to store the query result and the original message body is preserved. This value can be overridden by an in message header named: CamelInfinispanOperationResultHeader",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.sasl-mechanism",
      "type": "java.lang.String",
      "description": "Define the SASL Mechanism to access the infinispan instance",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.secure",
      "type": "java.lang.Boolean",
      "description": "Define if we are connecting to a secured Infinispan instance",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.infinispan.security-realm",
      "type": "java.lang.String",
      "description": "Define the security realm to access the infinispan instance",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.security-server-name",
      "type": "java.lang.String",
      "description": "Define the security server name to access the infinispan instance",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    },
    {
      "name": "camel.component.infinispan.username",
      "type": "java.lang.String",
      "description": "Define the username to access the infinispan instance",
      "sourceType": "org.apache.camel.component.infinispan.remote.springboot.InfinispanRemoteComponentConfiguration"
    }
  ],
  "hints": []
}