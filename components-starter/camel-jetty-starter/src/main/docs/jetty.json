{
  "groups": [
    {
      "name": "camel.component.jetty",
      "type": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.jetty.allow-java-serialized-object",
      "type": "java.lang.Boolean",
      "description": "Whether to allow java serialization when a request uses context-type=application\/x-java-serialized-object. This is by default turned off. If you enable this then be aware that Java will deserialize the incoming data from the request to Java and that can be a potential security risk.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": false
    },
    {
      "name": "camel.component.jetty.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": true
    },
    {
      "name": "camel.component.jetty.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": false
    },
    {
      "name": "camel.component.jetty.continuation-timeout",
      "type": "java.lang.Long",
      "description": "Allows to set a timeout in millis when using Jetty as consumer (server). By default Jetty uses 30000. You can use a value of = 0 to never expire. If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client. This option is only in use when using Jetty with the Asynchronous Routing Engine.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": 30000
    },
    {
      "name": "camel.component.jetty.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.jetty.enable-jmx",
      "type": "java.lang.Boolean",
      "description": "If this option is true, Jetty JMX support will be enabled for this endpoint.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": false
    },
    {
      "name": "camel.component.jetty.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the jetty component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.error-handler",
      "type": "org.eclipse.jetty.server.handler.ErrorHandler",
      "description": "This option is used to set the ErrorHandler that Jetty server uses. The option is a org.eclipse.jetty.server.handler.ErrorHandler type.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.file-size-threshold",
      "type": "java.lang.Integer",
      "description": "The size threshold after which files will be written to disk for multipart\/form-data requests. By default the files are not written to disk",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": 0
    },
    {
      "name": "camel.component.jetty.files-location",
      "type": "java.lang.String",
      "description": "The directory location where files will be store for multipart\/form-data requests. By default the files are written in the system temporary folder",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.header-filter-strategy",
      "type": "org.apache.camel.spi.HeaderFilterStrategy",
      "description": "To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter header to and from Camel message. The option is a org.apache.camel.spi.HeaderFilterStrategy type.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.http-binding",
      "type": "org.apache.camel.http.common.HttpBinding",
      "description": "Not to be used - use JettyHttpBinding instead. The option is a org.apache.camel.http.common.HttpBinding type.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.http-configuration",
      "type": "org.apache.camel.http.common.HttpConfiguration",
      "description": "Jetty component does not use HttpConfiguration. The option is a org.apache.camel.http.common.HttpConfiguration type.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.jetty-http-binding",
      "type": "org.apache.camel.component.jetty.JettyHttpBinding",
      "description": "To use a custom org.apache.camel.component.jetty.JettyHttpBinding, which are used to customize how a response should be written for the producer. The option is a org.apache.camel.component.jetty.JettyHttpBinding type.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.keystore",
      "type": "java.lang.String",
      "description": "Specifies the location of the Java keystore file, which contains the Jetty server's own X.509 certificate in a key entry.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.max-file-size",
      "type": "java.lang.Long",
      "description": "The maximum size allowed for uploaded files. -1 means no limit",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": -1
    },
    {
      "name": "camel.component.jetty.max-request-size",
      "type": "java.lang.Long",
      "description": "The maximum size allowed for multipart\/form-data requests. -1 means no limit",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": -1
    },
    {
      "name": "camel.component.jetty.max-threads",
      "type": "java.lang.Integer",
      "description": "To set a value for maximum number of threads in server thread pool. Notice that both a min and max size must be configured.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.mb-container",
      "type": "org.eclipse.jetty.jmx.MBeanContainer",
      "description": "To use a existing configured org.eclipse.jetty.jmx.MBeanContainer if JMX is enabled that Jetty uses for registering mbeans. The option is a org.eclipse.jetty.jmx.MBeanContainer type.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.min-threads",
      "type": "java.lang.Integer",
      "description": "To set a value for minimum number of threads in server thread pool. Notice that both a min and max size must be configured.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.mute-exception",
      "type": "java.lang.Boolean",
      "description": "If enabled and an Exchange failed processing on the consumer side the response's body won't contain the exception's stack trace.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": false
    },
    {
      "name": "camel.component.jetty.proxy-host",
      "type": "java.lang.String",
      "description": "To use a http proxy to configure the hostname.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.proxy-port",
      "type": "java.lang.Integer",
      "description": "To use a http proxy to configure the port number.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.request-buffer-size",
      "type": "java.lang.Integer",
      "description": "Allows to configure a custom value of the request buffer size on the Jetty connectors.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.request-header-size",
      "type": "java.lang.Integer",
      "description": "Allows to configure a custom value of the request header size on the Jetty connectors.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.response-buffer-size",
      "type": "java.lang.Integer",
      "description": "Allows to configure a custom value of the response buffer size on the Jetty connectors.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.response-header-size",
      "type": "java.lang.Integer",
      "description": "Allows to configure a custom value of the response header size on the Jetty connectors.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.send-server-version",
      "type": "java.lang.Boolean",
      "description": "If the option is true, jetty will send the server header with the jetty version information to the client which sends the request. NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": true
    },
    {
      "name": "camel.component.jetty.socket-connector-properties",
      "type": "java.util.Map<java.lang.String,java.lang.Object>",
      "description": "A map which contains general HTTP connector properties. Uses the same principle as sslSocketConnectorProperties.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.socket-connectors",
      "type": "java.util.Map<java.lang.Integer,org.eclipse.jetty.server.Connector>",
      "description": "A map which contains per port number specific HTTP connectors. Uses the same principle as sslSocketConnectors.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.ssl-context-parameters",
      "type": "org.apache.camel.support.jsse.SSLContextParameters",
      "description": "To configure security using SSLContextParameters. The option is a org.apache.camel.support.jsse.SSLContextParameters type.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.ssl-key-password",
      "type": "java.lang.String",
      "description": "The key password, which is used to access the certificate's key entry in the keystore (this is the same password that is supplied to the keystore command's -keypass option).",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.ssl-password",
      "type": "java.lang.String",
      "description": "The ssl password, which is required to access the keystore file (this is the same password that is supplied to the keystore command's -storepass option).",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.ssl-socket-connector-properties",
      "type": "java.util.Map<java.lang.String,java.lang.Object>",
      "description": "A map which contains general SSL connector properties.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.ssl-socket-connectors",
      "type": "java.util.Map<java.lang.Integer,org.eclipse.jetty.server.Connector>",
      "description": "A map which contains per port number specific SSL connectors.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.thread-pool",
      "type": "org.eclipse.jetty.util.thread.ThreadPool",
      "description": "To use a custom thread pool for the server. This option should only be used in special circumstances. The option is a org.eclipse.jetty.util.thread.ThreadPool type.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9"
    },
    {
      "name": "camel.component.jetty.use-continuation",
      "type": "java.lang.Boolean",
      "description": "Whether or not to use Jetty continuations for the Jetty Server.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": true
    },
    {
      "name": "camel.component.jetty.use-global-ssl-context-parameters",
      "type": "java.lang.Boolean",
      "description": "Enable usage of global SSL context parameters",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": false
    },
    {
      "name": "camel.component.jetty.use-x-forwarded-for-header",
      "type": "java.lang.Boolean",
      "description": "To use the X-Forwarded-For header in HttpServletRequest.getRemoteAddr.",
      "sourceType": "org.apache.camel.component.jetty9.springboot.JettyHttpComponentConfiguration9",
      "defaultValue": false
    }
  ],
  "hints": []
}