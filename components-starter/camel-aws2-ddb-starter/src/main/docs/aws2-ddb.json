{
  "groups": [
    {
      "name": "camel.component.aws2-ddb",
      "type": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    },
    {
      "name": "camel.component.aws2-ddbstream",
      "type": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.aws2-ddb.access-key",
      "type": "java.lang.String",
      "description": "Amazon AWS Access Key",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.amazon-d-d-b-client",
      "type": "software.amazon.awssdk.services.dynamodb.DynamoDbClient",
      "description": "To use the AmazonDynamoDB as the client. The option is a software.amazon.awssdk.services.dynamodb.DynamoDbClient type.",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.aws2-ddb.configuration",
      "type": "org.apache.camel.component.aws2.ddb.Ddb2Configuration",
      "description": "The component configuration. The option is a org.apache.camel.component.aws2.ddb.Ddb2Configuration type.",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.consistent-read",
      "type": "java.lang.Boolean",
      "description": "Determines whether strong consistency should be enforced when data is read.",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws2-ddb.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.aws2-ddb.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the aws2-ddb component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.enabled-initial-describe-table",
      "type": "java.lang.Boolean",
      "description": "Set whether the initial Describe table operation in the DDB Endpoint must be done, or not.",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.aws2-ddb.health-check-consumer-enabled",
      "type": "java.lang.Boolean",
      "description": "Used for enabling or disabling all consumer based health checks from this component",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.aws2-ddb.health-check-producer-enabled",
      "type": "java.lang.Boolean",
      "description": "Used for enabling or disabling all producer based health checks from this component. Notice: Camel has by default disabled all producer based health-checks. You can turn on producer checks globally by setting camel.health.producersEnabled=true.",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.aws2-ddb.key-attribute-name",
      "type": "java.lang.String",
      "description": "Attribute name when creating table",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.key-attribute-type",
      "type": "java.lang.String",
      "description": "Attribute type when creating table",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.key-scalar-type",
      "type": "java.lang.String",
      "description": "The key scalar type, it can be S (String), N (Number) and B (Bytes)",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws2-ddb.operation",
      "type": "org.apache.camel.component.aws2.ddb.Ddb2Operations",
      "description": "What operation to perform",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": "putitem"
    },
    {
      "name": "camel.component.aws2-ddb.override-endpoint",
      "type": "java.lang.Boolean",
      "description": "Set the need for overriding the endpoint. This option needs to be used in combination with uriEndpointOverride option",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws2-ddb.profile-credentials-name",
      "type": "java.lang.String",
      "description": "If using a profile credentials provider this parameter will set the profile name",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.proxy-host",
      "type": "java.lang.String",
      "description": "To define a proxy host when instantiating the DDB client",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.proxy-port",
      "type": "java.lang.Integer",
      "description": "The region in which DynamoDB client needs to work. When using this parameter, the configuration will expect the lowercase name of the region (for example ap-east-1) You'll need to use the name Region.EU_WEST_1.id()",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.proxy-protocol",
      "type": "software.amazon.awssdk.core.Protocol",
      "description": "To define a proxy protocol when instantiating the DDB client",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": "https"
    },
    {
      "name": "camel.component.aws2-ddb.read-capacity",
      "type": "java.lang.Long",
      "description": "The provisioned throughput to reserve for reading resources from your table",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.region",
      "type": "java.lang.String",
      "description": "The region in which DDB client needs to work",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.secret-key",
      "type": "java.lang.String",
      "description": "Amazon AWS Secret Key",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.session-token",
      "type": "java.lang.String",
      "description": "Amazon AWS Session Token used when the user needs to assume a IAM role",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.trust-all-certificates",
      "type": "java.lang.Boolean",
      "description": "If we want to trust all certificates in case of overriding the endpoint",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws2-ddb.uri-endpoint-override",
      "type": "java.lang.String",
      "description": "Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddb.use-default-credentials-provider",
      "type": "java.lang.Boolean",
      "description": "Set whether the S3 client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws2-ddb.use-profile-credentials-provider",
      "type": "java.lang.Boolean",
      "description": "Set whether the DDB client should expect to load credentials through a profile credentials provider.",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws2-ddb.use-session-credentials",
      "type": "java.lang.Boolean",
      "description": "Set whether the DDB client should expect to use Session Credentials. This is useful in situation in which the user needs to assume a IAM role for doing operations in DDB.",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws2-ddb.write-capacity",
      "type": "java.lang.Long",
      "description": "The provisioned throughput to reserved for writing resources to your table",
      "sourceType": "org.apache.camel.component.aws2.ddb.springboot.Ddb2ComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.access-key",
      "type": "java.lang.String",
      "description": "Amazon AWS Access Key",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.amazon-dynamo-db-streams-client",
      "type": "software.amazon.awssdk.services.dynamodb.streams.DynamoDbStreamsClient",
      "description": "Amazon DynamoDB client to use for all requests for this endpoint. The option is a software.amazon.awssdk.services.dynamodb.streams.DynamoDbStreamsClient type.",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.aws2-ddbstream.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions (if possible) occurred while the Camel consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. Important: This is only possible if the 3rd party component allows Camel to be alerted if an exception was thrown. Some components handle this internally only, and therefore bridgeErrorHandler is not possible. In other situations we may improve the Camel component to hook into the 3rd party component and make this possible for future releases. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws2-ddbstream.configuration",
      "type": "org.apache.camel.component.aws2.ddbstream.Ddb2StreamConfiguration",
      "description": "The component configuration. The option is a org.apache.camel.component.aws2.ddbstream.Ddb2StreamConfiguration type.",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.aws2-ddbstream.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the aws2-ddbstream component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.health-check-consumer-enabled",
      "type": "java.lang.Boolean",
      "description": "Used for enabling or disabling all consumer based health checks from this component",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.aws2-ddbstream.health-check-producer-enabled",
      "type": "java.lang.Boolean",
      "description": "Used for enabling or disabling all producer based health checks from this component. Notice: Camel has by default disabled all producer based health-checks. You can turn on producer checks globally by setting camel.health.producersEnabled=true.",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.aws2-ddbstream.max-results-per-request",
      "type": "java.lang.Integer",
      "description": "Maximum number of records that will be fetched in each poll",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.override-endpoint",
      "type": "java.lang.Boolean",
      "description": "Set the need for overidding the endpoint. This option needs to be used in combination with uriEndpointOverride option",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws2-ddbstream.profile-credentials-name",
      "type": "java.lang.String",
      "description": "If using a profile credentials provider this parameter will set the profile name.",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.proxy-host",
      "type": "java.lang.String",
      "description": "To define a proxy host when instantiating the DDBStreams client",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.proxy-port",
      "type": "java.lang.Integer",
      "description": "To define a proxy port when instantiating the DDBStreams client",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.proxy-protocol",
      "type": "software.amazon.awssdk.core.Protocol",
      "description": "To define a proxy protocol when instantiating the DDBStreams client",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "defaultValue": "https"
    },
    {
      "name": "camel.component.aws2-ddbstream.region",
      "type": "java.lang.String",
      "description": "The region in which DDBStreams client needs to work",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.secret-key",
      "type": "java.lang.String",
      "description": "Amazon AWS Secret Key",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.session-token",
      "type": "java.lang.String",
      "description": "Amazon AWS Session Token used when the user needs to assume a IAM role",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.stream-iterator-type",
      "type": "org.apache.camel.component.aws2.ddbstream.Ddb2StreamConfiguration$StreamIteratorType",
      "description": "Defines where in the DynamoDB stream to start getting records. Note that using FROM_START can cause a significant delay before the stream has caught up to real-time.",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "defaultValue": "from-latest"
    },
    {
      "name": "camel.component.aws2-ddbstream.trust-all-certificates",
      "type": "java.lang.Boolean",
      "description": "If we want to trust all certificates in case of overriding the endpoint",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws2-ddbstream.uri-endpoint-override",
      "type": "java.lang.String",
      "description": "Set the overriding uri endpoint. This option needs to be used in combination with overrideEndpoint option",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration"
    },
    {
      "name": "camel.component.aws2-ddbstream.use-default-credentials-provider",
      "type": "java.lang.Boolean",
      "description": "Set whether the DynamoDB Streams client should expect to load credentials through a default credentials provider or to expect static credentials to be passed in.",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws2-ddbstream.use-profile-credentials-provider",
      "type": "java.lang.Boolean",
      "description": "Set whether the Cloudtrail client should expect to load credentials through a profile credentials provider.",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws2-ddbstream.use-session-credentials",
      "type": "java.lang.Boolean",
      "description": "Set whether the DDB Streams client should expect to use Session Credentials. This is useful in situation in which the user needs to assume a IAM role for doing operations in DDB.",
      "sourceType": "org.apache.camel.component.aws2.ddbstream.springboot.Ddb2StreamComponentConfiguration",
      "defaultValue": false
    }
  ],
  "hints": []
}