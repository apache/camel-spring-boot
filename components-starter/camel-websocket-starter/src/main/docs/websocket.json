{
  "groups": [
    {
      "name": "camel.component.websocket",
      "type": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration"
    },
    {
      "name": "camel.component.websocket.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.websocket.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.websocket.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.websocket.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.websocket.enable-jmx",
      "type": "java.lang.Boolean",
      "description": "If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.websocket.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the websocket component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration"
    },
    {
      "name": "camel.component.websocket.host",
      "type": "java.lang.String",
      "description": "The hostname. The default value is 0.0.0.0",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration",
      "defaultValue": "0.0.0.0"
    },
    {
      "name": "camel.component.websocket.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.websocket.max-threads",
      "type": "java.lang.Integer",
      "description": "To set a value for maximum number of threads in server thread pool. MaxThreads\/minThreads or threadPool fields are required due to switch to Jetty9. The default values for maxThreads is 1 2 noCores.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration"
    },
    {
      "name": "camel.component.websocket.min-threads",
      "type": "java.lang.Integer",
      "description": "To set a value for minimum number of threads in server thread pool. MaxThreads\/minThreads or threadPool fields are required due to switch to Jetty9. The default values for minThreads is 1.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration"
    },
    {
      "name": "camel.component.websocket.port",
      "type": "java.lang.Integer",
      "description": "The port number. The default value is 9292",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration",
      "defaultValue": 9292
    },
    {
      "name": "camel.component.websocket.ssl-context-parameters",
      "type": "org.apache.camel.support.jsse.SSLContextParameters",
      "description": "To configure security using SSLContextParameters. The option is a org.apache.camel.support.jsse.SSLContextParameters type.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration"
    },
    {
      "name": "camel.component.websocket.ssl-key-password",
      "type": "java.lang.String",
      "description": "The password for the keystore when using SSL.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration"
    },
    {
      "name": "camel.component.websocket.ssl-keystore",
      "type": "java.lang.String",
      "description": "The path to the keystore.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration"
    },
    {
      "name": "camel.component.websocket.ssl-password",
      "type": "java.lang.String",
      "description": "The password when using SSL.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration"
    },
    {
      "name": "camel.component.websocket.static-resources",
      "type": "java.lang.String",
      "description": "Set a resource path for static resources (such as .html files etc). The resources can be loaded from classpath, if you prefix with classpath:, otherwise the resources is loaded from file system or from JAR files. For example to load from root classpath use classpath:., or classpath:WEB-INF\/static If not configured (eg null) then no static resource is in use.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration"
    },
    {
      "name": "camel.component.websocket.subprotocol",
      "type": "java.lang.String",
      "description": "This is a comma-separated list of subprotocols that are supported by the application. The list is in priority order. The first subprotocol on this list that is proposed by the client is the one that will be accepted. If no subprotocol on this list is proposed by the client, then the websocket connection is refused. The special value 'any' means that any subprotocol is acceptable. 'any' can be used on its own, or as a failsafe at the end of a list of more specific protocols. 'any' will also match the case where no subprotocol is proposed by the client.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration",
      "defaultValue": "any"
    },
    {
      "name": "camel.component.websocket.thread-pool",
      "type": "org.eclipse.jetty.util.thread.ThreadPool",
      "description": "To use a custom thread pool for the server. MaxThreads\/minThreads or threadPool fields are required due to switch to Jetty9. The option is a org.eclipse.jetty.util.thread.ThreadPool type.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration"
    },
    {
      "name": "camel.component.websocket.use-global-ssl-context-parameters",
      "type": "java.lang.Boolean",
      "description": "Enable usage of global SSL context parameters.",
      "sourceType": "org.apache.camel.component.websocket.springboot.WebsocketComponentConfiguration",
      "defaultValue": false
    }
  ],
  "hints": []
}