{
  "groups": [
    {
      "name": "camel.dataformat.protobuf-jackson",
      "type": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.customizer",
      "type": "org.apache.camel.spring.boot.DataFormatConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.dataformat.protobuf-jackson.allow-jms-type",
      "type": "java.lang.Boolean",
      "description": "Used for JMS users to allow the JMSType header from the JMS spec to specify a FQN classname to use to unmarshal to.",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.protobuf-jackson.allow-unmarshall-type",
      "type": "java.lang.Boolean",
      "description": "If enabled then Jackson is allowed to attempt to use the CamelJacksonUnmarshalType header during the unmarshalling. This should only be enabled when desired to be used.",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.protobuf-jackson.auto-discover-object-mapper",
      "type": "java.lang.Boolean",
      "description": "If set to true then Jackson will lookup for an objectMapper into the registry",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.protobuf-jackson.auto-discover-schema-resolver",
      "type": "java.lang.Boolean",
      "description": "When not disabled, the SchemaResolver will be looked up into the registry",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.dataformat.protobuf-jackson.collection-type",
      "type": "java.lang.String",
      "description": "Refers to a custom collection type to lookup in the registry to use. This option should rarely be used, but allows to use different collection types than java.util.Collection based as default.",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.content-type-header",
      "type": "java.lang.Boolean",
      "description": "Whether the data format should set the Content-Type header with the type from the data format. For example application\/xml for data formats marshalling to XML, or application\/json for data formats marshalling to JSON",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.dataformat.protobuf-jackson.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.DataFormatConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.disable-features",
      "type": "java.lang.String",
      "description": "Set of features to disable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.enable-features",
      "type": "java.lang.String",
      "description": "Set of features to enable on the Jackson com.fasterxml.jackson.databind.ObjectMapper. The features should be a name that matches a enum from com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.DeserializationFeature, or com.fasterxml.jackson.databind.MapperFeature Multiple features can be separated by comma",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the protobuf-jackson data format. This is enabled by default.",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.include",
      "type": "java.lang.String",
      "description": "If you want to marshal a pojo to JSON, and the pojo has some fields with null values. And you want to skip these null values, you can set this option to NON_NULL",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.json-view",
      "type": "java.lang.String",
      "description": "When marshalling a POJO to JSON you might want to exclude certain fields from the JSON output. With Jackson you can use JSON views to accomplish this. This option is to refer to the class which has JsonView annotations",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.module-class-names",
      "type": "java.lang.String",
      "description": "To use custom Jackson modules com.fasterxml.jackson.databind.Module specified as a String with FQN class names. Multiple classes can be separated by comma.",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.module-refs",
      "type": "java.lang.String",
      "description": "To use custom Jackson modules referred from the Camel registry. Multiple modules can be separated by comma.",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.object-mapper",
      "type": "java.lang.String",
      "description": "Lookup and use the existing ObjectMapper with the given id when using Jackson.",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.schema-resolver",
      "type": "java.lang.String",
      "description": "Optional schema resolver used to lookup schemas for the data in transit.",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.timezone",
      "type": "java.lang.String",
      "description": "If set then Jackson will use the Timezone when marshalling\/unmarshalling.",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.unmarshal-type",
      "type": "java.lang.String",
      "description": "Class name of the java type to use when unmarshalling",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.protobuf-jackson.use-default-object-mapper",
      "type": "java.lang.Boolean",
      "description": "Whether to lookup and use default Jackson ObjectMapper from the registry.",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.dataformat.protobuf-jackson.use-list",
      "type": "java.lang.Boolean",
      "description": "To unmarshal to a List of Map or a List of Pojo.",
      "sourceType": "org.apache.camel.component.jackson.protobuf.springboot.JacksonProtobufDataFormatConfiguration",
      "defaultValue": false
    }
  ],
  "hints": []
}