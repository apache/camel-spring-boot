{
  "groups": [
    {
      "name": "camel.language.jsonpath",
      "type": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration",
      "sourceType": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration"
    },
    {
      "name": "camel.language.jsonpath.customizer",
      "type": "org.apache.camel.spring.boot.LanguageConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.language.jsonpath.allow-easy-predicate",
      "type": "java.lang.Boolean",
      "description": "Whether to allow using the easy predicate parser to pre-parse predicates.",
      "sourceType": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.language.jsonpath.allow-simple",
      "type": "java.lang.Boolean",
      "description": "Whether to allow in inlined Simple exceptions in the JSONPath expression",
      "sourceType": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.language.jsonpath.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.LanguageConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.language.jsonpath.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the jsonpath language. This is enabled by default.",
      "sourceType": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration"
    },
    {
      "name": "camel.language.jsonpath.header-name",
      "type": "java.lang.String",
      "description": "Name of header to use as input, instead of the message body It has as higher precedent than the propertyName if both are set.",
      "sourceType": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration"
    },
    {
      "name": "camel.language.jsonpath.option",
      "type": "java.lang.String",
      "description": "To configure additional options on JSONPath. Multiple values can be separated by comma.",
      "sourceType": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration"
    },
    {
      "name": "camel.language.jsonpath.property-name",
      "type": "java.lang.String",
      "description": "Name of property to use as input, instead of the message body. It has a lower precedent than the headerName if both are set.",
      "sourceType": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration"
    },
    {
      "name": "camel.language.jsonpath.suppress-exceptions",
      "type": "java.lang.Boolean",
      "description": "Whether to suppress exceptions such as PathNotFoundException.",
      "sourceType": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.language.jsonpath.trim",
      "type": "java.lang.Boolean",
      "description": "Whether to trim the value to remove leading and trailing whitespaces and line breaks",
      "sourceType": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.language.jsonpath.unpack-array",
      "type": "java.lang.Boolean",
      "description": "Whether to unpack a single element json-array into an object.",
      "sourceType": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.language.jsonpath.write-as-string",
      "type": "java.lang.Boolean",
      "description": "Whether to write the output of each row\/element as a JSON String value instead of a Map\/POJO value.",
      "sourceType": "org.apache.camel.jsonpath.springboot.JsonPathLanguageConfiguration",
      "defaultValue": false
    }
  ],
  "hints": []
}