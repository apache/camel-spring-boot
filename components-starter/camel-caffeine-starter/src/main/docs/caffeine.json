{
  "groups": [
    {
      "name": "camel.component.caffeine-cache",
      "type": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-cache.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    },
    {
      "name": "camel.component.caffeine-cache.key",
      "type": "java.lang.Object",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration",
      "sourceMethod": "getKey()"
    },
    {
      "name": "camel.component.caffeine-loadcache",
      "type": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-loadcache.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    },
    {
      "name": "camel.component.caffeine-loadcache.key",
      "type": "java.lang.Object",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration",
      "sourceMethod": "getKey()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.caffeine-cache.action",
      "type": "java.lang.String",
      "description": "To configure the default cache action. If an action is set in the message header, then the operation from the header takes precedence.",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-cache.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.caffeine-cache.cache-loader",
      "type": "com.github.benmanes.caffeine.cache.CacheLoader",
      "description": "To configure a CacheLoader in case of a LoadCache use. The option is a com.github.benmanes.caffeine.cache.CacheLoader type.",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-cache.configuration",
      "type": "org.apache.camel.component.caffeine.CaffeineConfiguration",
      "description": "Sets the global component configuration. The option is a org.apache.camel.component.caffeine.CaffeineConfiguration type.",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-cache.create-cache-if-not-exist",
      "type": "java.lang.Boolean",
      "description": "Configure if a cache need to be created if it does exist or can't be pre-configured.",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.caffeine-cache.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.caffeine-cache.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the caffeine-cache component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-cache.eviction-type",
      "type": "org.apache.camel.component.caffeine.EvictionType",
      "description": "Set the eviction Type for this cache",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-cache.expire-after-access-time",
      "type": "java.lang.Integer",
      "description": "Set the expire After Access Time in case of time based Eviction (in seconds)",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration",
      "defaultValue": 300
    },
    {
      "name": "camel.component.caffeine-cache.expire-after-write-time",
      "type": "java.lang.Integer",
      "description": "Set the expire After Access Write in case of time based Eviction (in seconds)",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration",
      "defaultValue": 300
    },
    {
      "name": "camel.component.caffeine-cache.initial-capacity",
      "type": "java.lang.Integer",
      "description": "Set the initial Capacity for the cache",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration",
      "defaultValue": 10000
    },
    {
      "name": "camel.component.caffeine-cache.key-type",
      "type": "java.lang.String",
      "description": "The cache key type, default java.lang.Object",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-cache.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.caffeine-cache.maximum-size",
      "type": "java.lang.Integer",
      "description": "Set the maximum size for the cache",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration",
      "defaultValue": 10000
    },
    {
      "name": "camel.component.caffeine-cache.removal-listener",
      "type": "com.github.benmanes.caffeine.cache.RemovalListener",
      "description": "Set a specific removal Listener for the cache. The option is a com.github.benmanes.caffeine.cache.RemovalListener type.",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-cache.stats-counter",
      "type": "com.github.benmanes.caffeine.cache.stats.StatsCounter",
      "description": "Set a specific Stats Counter for the cache stats. The option is a com.github.benmanes.caffeine.cache.stats.StatsCounter type.",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-cache.stats-enabled",
      "type": "java.lang.Boolean",
      "description": "To enable stats on the cache",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.caffeine-cache.value-type",
      "type": "java.lang.String",
      "description": "The cache value type, default java.lang.Object",
      "sourceType": "org.apache.camel.component.caffeine.cache.springboot.CaffeineCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-loadcache.action",
      "type": "java.lang.String",
      "description": "To configure the default cache action. If an action is set in the message header, then the operation from the header takes precedence.",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-loadcache.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.caffeine-loadcache.cache-loader",
      "type": "com.github.benmanes.caffeine.cache.CacheLoader",
      "description": "To configure a CacheLoader in case of a LoadCache use. The option is a com.github.benmanes.caffeine.cache.CacheLoader type.",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-loadcache.configuration",
      "type": "org.apache.camel.component.caffeine.CaffeineConfiguration",
      "description": "Sets the global component configuration. The option is a org.apache.camel.component.caffeine.CaffeineConfiguration type.",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-loadcache.create-cache-if-not-exist",
      "type": "java.lang.Boolean",
      "description": "Configure if a cache need to be created if it does exist or can't be pre-configured.",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.caffeine-loadcache.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.caffeine-loadcache.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the caffeine-loadcache component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-loadcache.eviction-type",
      "type": "org.apache.camel.component.caffeine.EvictionType",
      "description": "Set the eviction Type for this cache",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-loadcache.expire-after-access-time",
      "type": "java.lang.Integer",
      "description": "Set the expire After Access Time in case of time based Eviction (in seconds)",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration",
      "defaultValue": 300
    },
    {
      "name": "camel.component.caffeine-loadcache.expire-after-write-time",
      "type": "java.lang.Integer",
      "description": "Set the expire After Access Write in case of time based Eviction (in seconds)",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration",
      "defaultValue": 300
    },
    {
      "name": "camel.component.caffeine-loadcache.initial-capacity",
      "type": "java.lang.Integer",
      "description": "Set the initial Capacity for the cache",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration",
      "defaultValue": 10000
    },
    {
      "name": "camel.component.caffeine-loadcache.key-type",
      "type": "java.lang.String",
      "description": "The cache key type, default java.lang.Object",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-loadcache.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.caffeine-loadcache.maximum-size",
      "type": "java.lang.Integer",
      "description": "Set the maximum size for the cache",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration",
      "defaultValue": 10000
    },
    {
      "name": "camel.component.caffeine-loadcache.removal-listener",
      "type": "com.github.benmanes.caffeine.cache.RemovalListener",
      "description": "Set a specific removal Listener for the cache. The option is a com.github.benmanes.caffeine.cache.RemovalListener type.",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-loadcache.stats-counter",
      "type": "com.github.benmanes.caffeine.cache.stats.StatsCounter",
      "description": "Set a specific Stats Counter for the cache stats. The option is a com.github.benmanes.caffeine.cache.stats.StatsCounter type.",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration"
    },
    {
      "name": "camel.component.caffeine-loadcache.stats-enabled",
      "type": "java.lang.Boolean",
      "description": "To enable stats on the cache",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.caffeine-loadcache.value-type",
      "type": "java.lang.String",
      "description": "The cache value type, default java.lang.Object",
      "sourceType": "org.apache.camel.component.caffeine.load.springboot.CaffeineLoadCacheComponentConfiguration"
    }
  ],
  "hints": []
}