{
  "groups": [
    {
      "name": "camel.component.azure-storage-datalake",
      "type": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.azure-storage-datalake.account-key",
      "type": "java.lang.String",
      "description": "account key for authentication",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-storage-datalake.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions (if possible) occurred while the Camel consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. Important: This is only possible if the 3rd party component allows Camel to be alerted if an exception was thrown. Some components handle this internally only, and therefore bridgeErrorHandler is not possible. In other situations we may improve the Camel component to hook into the 3rd party component and make this possible for future releases. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.azure-storage-datalake.client-id",
      "type": "java.lang.String",
      "description": "client id for azure account",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.client-secret",
      "type": "java.lang.String",
      "description": "client secret for azure account",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.client-secret-credential",
      "type": "com.azure.identity.ClientSecretCredential",
      "description": "client secret credential for authentication. The option is a com.azure.identity.ClientSecretCredential type.",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.close",
      "type": "java.lang.Boolean",
      "description": "Whether or not a file changed event raised indicates completion (true) or modification (false)",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.close-stream-after-read",
      "type": "java.lang.Boolean",
      "description": "check for closing stream after read",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.configuration",
      "type": "org.apache.camel.component.azure.storage.datalake.DataLakeConfiguration",
      "description": "configuration object for data lake. The option is a org.apache.camel.component.azure.storage.datalake.DataLakeConfiguration type.",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.credential-type",
      "type": "org.apache.camel.component.azure.storage.datalake.CredentialType",
      "description": "Determines the credential strategy to adopt",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.azure-storage-datalake.data-count",
      "type": "java.lang.Long",
      "description": "count number of bytes to download",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.directory-name",
      "type": "java.lang.String",
      "description": "directory of the file to be handled in component",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.download-link-expiration",
      "type": "java.lang.Long",
      "description": "download link expiration time",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the azure-storage-datalake component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.expression",
      "type": "java.lang.String",
      "description": "expression for queryInputStream",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.file-dir",
      "type": "java.lang.String",
      "description": "directory of file to do operations in the local system",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.file-name",
      "type": "java.lang.String",
      "description": "name of file to be handled in component",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.file-offset",
      "type": "java.lang.Long",
      "description": "offset position in file for different operations",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.health-check-consumer-enabled",
      "type": "java.lang.Boolean",
      "description": "Used for enabling or disabling all consumer based health checks from this component",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-storage-datalake.health-check-producer-enabled",
      "type": "java.lang.Boolean",
      "description": "Used for enabling or disabling all producer based health checks from this component. Notice: Camel has by default disabled all producer based health-checks. You can turn on producer checks globally by setting camel.health.producersEnabled=true.",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-storage-datalake.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.azure-storage-datalake.max-results",
      "type": "java.lang.Integer",
      "description": "maximum number of results to show at a time",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.max-retry-requests",
      "type": "java.lang.Integer",
      "description": "no of retries to a given request",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.open-options",
      "type": "java.util.Set<java.nio.file.OpenOption>",
      "description": "set open options for creating file",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.operation",
      "type": "org.apache.camel.component.azure.storage.datalake.DataLakeOperationsDefinition",
      "description": "operation to be performed",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.path",
      "type": "java.lang.String",
      "description": "path in azure data lake for operations",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.permission",
      "type": "java.lang.String",
      "description": "permission string for the file",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.position",
      "type": "java.lang.Long",
      "description": "This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.recursive",
      "type": "java.lang.Boolean",
      "description": "recursively include all paths",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.regex",
      "type": "java.lang.String",
      "description": "regular expression for matching file names",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.retain-uncommited-data",
      "type": "java.lang.Boolean",
      "description": "Whether or not uncommitted data is to be retained after the operation",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.sas-credential",
      "type": "com.azure.core.credential.AzureSasCredential",
      "description": "SAS token credential. The option is a com.azure.core.credential.AzureSasCredential type.",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.sas-signature",
      "type": "java.lang.String",
      "description": "SAS token signature",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.service-client",
      "type": "com.azure.storage.file.datalake.DataLakeServiceClient",
      "description": "data lake service client for azure storage data lake. The option is a com.azure.storage.file.datalake.DataLakeServiceClient type.",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.shared-key-credential",
      "type": "com.azure.storage.common.StorageSharedKeyCredential",
      "description": "shared key credential for azure data lake gen2. The option is a com.azure.storage.common.StorageSharedKeyCredential type.",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.tenant-id",
      "type": "java.lang.String",
      "description": "tenant id for azure account",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.timeout",
      "type": "java.time.Duration",
      "description": "Timeout for operation",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.umask",
      "type": "java.lang.String",
      "description": "umask permission for file",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-datalake.user-principal-name-returned",
      "type": "java.lang.Boolean",
      "description": "whether or not to use upn",
      "sourceType": "org.apache.camel.component.azure.storage.datalake.springboot.DataLakeComponentConfiguration"
    }
  ],
  "hints": []
}