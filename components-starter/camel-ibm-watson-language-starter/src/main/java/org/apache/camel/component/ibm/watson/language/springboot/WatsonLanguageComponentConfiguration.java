/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.camel.component.ibm.watson.language.springboot;

import org.apache.camel.component.ibm.watson.language.WatsonLanguageConfiguration;
import org.apache.camel.component.ibm.watson.language.WatsonLanguageOperations;
import org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon;
import org.springframework.boot.context.properties.ConfigurationProperties;

/**
 * Perform natural language processing using IBM Watson Natural Language
 * Understanding
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@ConfigurationProperties(prefix = "camel.component.ibm-watson-language")
public class WatsonLanguageComponentConfiguration
        extends
            ComponentConfigurationPropertiesCommon {

    /**
     * Whether to enable auto configuration of the ibm-watson-language
     * component. This is enabled by default.
     */
    private Boolean enabled;
    /**
     * The service endpoint URL. If not specified, the default URL will be used.
     */
    private String serviceUrl;
    /**
     * Enable category classification
     */
    private Boolean analyzeCategories = false;
    /**
     * Enable concept extraction
     */
    private Boolean analyzeConcepts = false;
    /**
     * Enable emotion analysis
     */
    private Boolean analyzeEmotion = false;
    /**
     * Enable entity extraction
     */
    private Boolean analyzeEntities = true;
    /**
     * Enable keyword extraction
     */
    private Boolean analyzeKeywords = true;
    /**
     * Enable sentiment analysis
     */
    private Boolean analyzeSentiment = true;
    /**
     * Component configuration. The option is a
     * org.apache.camel.component.ibm.watson.language.WatsonLanguageConfiguration type.
     */
    private WatsonLanguageConfiguration configuration;
    /**
     * Whether the producer should be started lazy (on the first message). By
     * starting lazy you can use this to allow CamelContext and routes to
     * startup in situations where a producer may otherwise fail during starting
     * and cause the route to fail being started. By deferring this startup to
     * be lazy then the startup failure can be handled during routing messages
     * via Camel's routing error handlers. Beware that when the first message is
     * processed then creating and starting the producer may take a little time
     * and prolong the total processing time of the processing.
     */
    private Boolean lazyStartProducer = false;
    /**
     * The operation to perform
     */
    private WatsonLanguageOperations operation;
    /**
     * Whether autowiring is enabled. This is used for automatic autowiring
     * options (the option must be marked as autowired) by looking up in the
     * registry to find if there is a single instance of matching type, which
     * then gets configured on the component. This can be used for automatic
     * configuring JDBC data sources, JMS connection factories, AWS Clients,
     * etc.
     */
    private Boolean autowiredEnabled = true;
    /**
     * Used for enabling or disabling all consumer based health checks from this
     * component
     */
    private Boolean healthCheckConsumerEnabled = true;
    /**
     * Used for enabling or disabling all producer based health checks from this
     * component. Notice: Camel has by default disabled all producer based
     * health-checks. You can turn on producer checks globally by setting
     * camel.health.producersEnabled=true.
     */
    private Boolean healthCheckProducerEnabled = true;
    /**
     * The IBM Cloud API key for authentication
     */
    private String apiKey;

    public String getServiceUrl() {
        return serviceUrl;
    }

    public void setServiceUrl(String serviceUrl) {
        this.serviceUrl = serviceUrl;
    }

    public Boolean getAnalyzeCategories() {
        return analyzeCategories;
    }

    public void setAnalyzeCategories(Boolean analyzeCategories) {
        this.analyzeCategories = analyzeCategories;
    }

    public Boolean getAnalyzeConcepts() {
        return analyzeConcepts;
    }

    public void setAnalyzeConcepts(Boolean analyzeConcepts) {
        this.analyzeConcepts = analyzeConcepts;
    }

    public Boolean getAnalyzeEmotion() {
        return analyzeEmotion;
    }

    public void setAnalyzeEmotion(Boolean analyzeEmotion) {
        this.analyzeEmotion = analyzeEmotion;
    }

    public Boolean getAnalyzeEntities() {
        return analyzeEntities;
    }

    public void setAnalyzeEntities(Boolean analyzeEntities) {
        this.analyzeEntities = analyzeEntities;
    }

    public Boolean getAnalyzeKeywords() {
        return analyzeKeywords;
    }

    public void setAnalyzeKeywords(Boolean analyzeKeywords) {
        this.analyzeKeywords = analyzeKeywords;
    }

    public Boolean getAnalyzeSentiment() {
        return analyzeSentiment;
    }

    public void setAnalyzeSentiment(Boolean analyzeSentiment) {
        this.analyzeSentiment = analyzeSentiment;
    }

    public WatsonLanguageConfiguration getConfiguration() {
        return configuration;
    }

    public void setConfiguration(WatsonLanguageConfiguration configuration) {
        this.configuration = configuration;
    }

    public Boolean getLazyStartProducer() {
        return lazyStartProducer;
    }

    public void setLazyStartProducer(Boolean lazyStartProducer) {
        this.lazyStartProducer = lazyStartProducer;
    }

    public WatsonLanguageOperations getOperation() {
        return operation;
    }

    public void setOperation(WatsonLanguageOperations operation) {
        this.operation = operation;
    }

    public Boolean getAutowiredEnabled() {
        return autowiredEnabled;
    }

    public void setAutowiredEnabled(Boolean autowiredEnabled) {
        this.autowiredEnabled = autowiredEnabled;
    }

    public Boolean getHealthCheckConsumerEnabled() {
        return healthCheckConsumerEnabled;
    }

    public void setHealthCheckConsumerEnabled(Boolean healthCheckConsumerEnabled) {
        this.healthCheckConsumerEnabled = healthCheckConsumerEnabled;
    }

    public Boolean getHealthCheckProducerEnabled() {
        return healthCheckProducerEnabled;
    }

    public void setHealthCheckProducerEnabled(Boolean healthCheckProducerEnabled) {
        this.healthCheckProducerEnabled = healthCheckProducerEnabled;
    }

    public String getApiKey() {
        return apiKey;
    }

    public void setApiKey(String apiKey) {
        this.apiKey = apiKey;
    }
}