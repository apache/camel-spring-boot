{
  "groups": [
    {
      "name": "camel.component.jira",
      "type": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration"
    },
    {
      "name": "camel.component.jira.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.jira.access-token",
      "type": "java.lang.String",
      "description": "(OAuth only) The access token generated by the Jira server.",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration"
    },
    {
      "name": "camel.component.jira.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.jira.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.jira.configuration",
      "type": "org.apache.camel.component.jira.JiraConfiguration",
      "description": "To use a shared base jira configuration. The option is a org.apache.camel.component.jira.JiraConfiguration type.",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration"
    },
    {
      "name": "camel.component.jira.consumer-key",
      "type": "java.lang.String",
      "description": "(OAuth only) The consumer key from Jira settings.",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration"
    },
    {
      "name": "camel.component.jira.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.jira.delay",
      "type": "java.lang.Integer",
      "description": "Time in milliseconds to elapse for the next poll.",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration",
      "defaultValue": 6000
    },
    {
      "name": "camel.component.jira.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the jira component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration"
    },
    {
      "name": "camel.component.jira.jira-url",
      "type": "java.lang.String",
      "description": "The Jira server url, example: http:\/\/my_jira.com:8081",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration"
    },
    {
      "name": "camel.component.jira.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.jira.password",
      "type": "java.lang.String",
      "description": "(Basic authentication only) The password to authenticate to the Jira server. Use only if username basic authentication is used.",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration"
    },
    {
      "name": "camel.component.jira.private-key",
      "type": "java.lang.String",
      "description": "(OAuth only) The private key generated by the client to encrypt the conversation to the server.",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration"
    },
    {
      "name": "camel.component.jira.username",
      "type": "java.lang.String",
      "description": "(Basic authentication only) The username to authenticate to the Jira server. Use only if OAuth is not enabled on the Jira server. Do not set the username and OAuth token parameter, if they are both set, the username basic authentication takes precedence.",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration"
    },
    {
      "name": "camel.component.jira.verification-code",
      "type": "java.lang.String",
      "description": "(OAuth only) The verification code from Jira generated in the first step of the authorization proccess.",
      "sourceType": "org.apache.camel.component.jira.springboot.JiraComponentConfiguration"
    }
  ],
  "hints": []
}