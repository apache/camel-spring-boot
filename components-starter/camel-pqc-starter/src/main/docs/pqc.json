{
  "groups": [
    {
      "name": "camel.component.pqc",
      "type": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration",
      "sourceType": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration"
    },
    {
      "name": "camel.component.pqc.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.pqc.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.pqc.configuration",
      "type": "org.apache.camel.component.pqc.PQCConfiguration",
      "description": "Component configuration. The option is a org.apache.camel.component.pqc.PQCConfiguration type.",
      "sourceType": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration"
    },
    {
      "name": "camel.component.pqc.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.pqc.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the pqc component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration"
    },
    {
      "name": "camel.component.pqc.health-check-consumer-enabled",
      "type": "java.lang.Boolean",
      "description": "Used for enabling or disabling all consumer based health checks from this component",
      "sourceType": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.pqc.health-check-producer-enabled",
      "type": "java.lang.Boolean",
      "description": "Used for enabling or disabling all producer based health checks from this component. Notice: Camel has by default disabled all producer based health-checks. You can turn on producer checks globally by setting camel.health.producersEnabled=true.",
      "sourceType": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.pqc.key-pair",
      "type": "java.security.KeyPair",
      "description": "The KeyPair to be used. The option is a java.security.KeyPair type.",
      "sourceType": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration"
    },
    {
      "name": "camel.component.pqc.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.pqc.operation",
      "type": "org.apache.camel.component.pqc.PQCOperations",
      "description": "The operation to perform",
      "sourceType": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration"
    },
    {
      "name": "camel.component.pqc.signature-algorithm",
      "type": "java.lang.String",
      "description": "In case there is no signer, we specify an algorithm to build the KeyPair or the Signer",
      "sourceType": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration"
    },
    {
      "name": "camel.component.pqc.signer",
      "type": "java.security.Signature",
      "description": "The Signer to be used. The option is a java.security.Signature type.",
      "sourceType": "org.apache.camel.component.pqc.springboot.PQCComponentConfiguration"
    }
  ],
  "hints": []
}