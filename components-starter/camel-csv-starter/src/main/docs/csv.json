{
  "groups": [
    {
      "name": "camel.dataformat.csv",
      "type": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.customizer",
      "type": "org.apache.camel.spring.boot.DataFormatConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.dataformat.csv.allow-missing-column-names",
      "type": "java.lang.Boolean",
      "description": "Whether to allow missing column names.",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.capture-header-record",
      "type": "java.lang.Boolean",
      "description": "Whether the unmarshalling should capture the header record and store it in the message header",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.comment-marker",
      "type": "java.lang.String",
      "description": "Sets the comment marker of the reference format.",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.comment-marker-disabled",
      "type": "java.lang.Boolean",
      "description": "Disables the comment marker of the reference format.",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.DataFormatConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.dataformat.csv.delimiter",
      "type": "java.lang.String",
      "description": "Sets the delimiter to use. The default value is , (comma)",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the csv data format. This is enabled by default.",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.escape",
      "type": "java.lang.String",
      "description": "Sets the escape character to use",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.escape-disabled",
      "type": "java.lang.Boolean",
      "description": "Use for disabling using escape character",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.format-name",
      "type": "java.lang.String",
      "description": "The name of the format to use, the default value is CSVFormat.DEFAULT",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": "DEFAULT"
    },
    {
      "name": "camel.dataformat.csv.format-ref",
      "type": "java.lang.String",
      "description": "The reference format to use, it will be updated with the other format options, the default value is CSVFormat.DEFAULT",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.header",
      "type": "java.util.List<java.lang.String>",
      "description": "To configure the CSV headers",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.header-disabled",
      "type": "java.lang.Boolean",
      "description": "Use for disabling headers",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.ignore-empty-lines",
      "type": "java.lang.Boolean",
      "description": "Whether to ignore empty lines.",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.ignore-header-case",
      "type": "java.lang.Boolean",
      "description": "Sets whether or not to ignore case when accessing header names.",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.ignore-surrounding-spaces",
      "type": "java.lang.Boolean",
      "description": "Whether to ignore surrounding spaces",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.lazy-load",
      "type": "java.lang.Boolean",
      "description": "Whether the unmarshalling should produce an iterator that reads the lines on the fly or if all the lines must be read at one.",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.marshaller-factory-ref",
      "type": "java.lang.String",
      "description": "Sets the implementation of the CsvMarshallerFactory interface which is able to customize marshalling\/unmarshalling behavior by extending CsvMarshaller or creating it from scratch.",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.null-string",
      "type": "java.lang.String",
      "description": "Sets the null string",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.null-string-disabled",
      "type": "java.lang.Boolean",
      "description": "Used to disable null strings",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.quote",
      "type": "java.lang.String",
      "description": "Sets the quote which by default is",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.quote-disabled",
      "type": "java.lang.Boolean",
      "description": "Used to disable quotes",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.quote-mode",
      "type": "java.lang.String",
      "description": "Sets the quote mode",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.record-converter-ref",
      "type": "java.lang.String",
      "description": "Refers to a custom CsvRecordConverter to lookup from the registry to use.",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.record-separator",
      "type": "java.lang.String",
      "description": "Sets the record separator (aka new line) which by default is new line characters (CRLF)",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.record-separator-disabled",
      "type": "java.lang.String",
      "description": "Used for disabling record separator",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration"
    },
    {
      "name": "camel.dataformat.csv.skip-header-record",
      "type": "java.lang.Boolean",
      "description": "Whether to skip the header record in the output",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.trailing-delimiter",
      "type": "java.lang.Boolean",
      "description": "Sets whether or not to add a trailing delimiter.",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.trim",
      "type": "java.lang.Boolean",
      "description": "Sets whether or not to trim leading and trailing blanks.",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.use-maps",
      "type": "java.lang.Boolean",
      "description": "Whether the unmarshalling should produce maps (HashMap)for the lines values instead of lists. It requires to have header (either defined or collected).",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.dataformat.csv.use-ordered-maps",
      "type": "java.lang.Boolean",
      "description": "Whether the unmarshalling should produce ordered maps (LinkedHashMap) for the lines values instead of lists. It requires to have header (either defined or collected).",
      "sourceType": "org.apache.camel.dataformat.csv.springboot.CsvDataFormatConfiguration",
      "defaultValue": false
    }
  ],
  "hints": []
}