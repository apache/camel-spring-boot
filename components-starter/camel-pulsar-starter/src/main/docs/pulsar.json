{
  "groups": [
    {
      "name": "camel.component.pulsar",
      "type": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.pulsar.ack-group-time-millis",
      "type": "java.lang.Long",
      "description": "Group the consumer acknowledgments for the specified time in milliseconds - defaults to 100",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": 100
    },
    {
      "name": "camel.component.pulsar.ack-timeout-millis",
      "type": "java.lang.Long",
      "description": "Timeout for unacknowledged messages in milliseconds - defaults to 10000",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": 10000
    },
    {
      "name": "camel.component.pulsar.ack-timeout-redelivery-backoff",
      "type": "org.apache.pulsar.client.api.RedeliveryBackoff",
      "description": "RedeliveryBackoff to use for ack timeout redelivery backoff. The option is a org.apache.pulsar.client.api.RedeliveryBackoff type.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.allow-manual-acknowledgement",
      "type": "java.lang.Boolean",
      "description": "Whether to allow manual message acknowledgements. If this option is enabled, then messages are not acknowledged automatically after successful route completion. Instead, an instance of PulsarMessageReceipt is stored as a header on the org.apache.camel.Exchange. Messages can then be acknowledged using PulsarMessageReceipt at any time before the ackTimeout occurs.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.pulsar.authentication-class",
      "type": "java.lang.String",
      "description": "The Authentication FQCN to be used while creating the client from URI",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.authentication-params",
      "type": "java.lang.String",
      "description": "The Authentication Parameters to be used while creating the client from URI",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.auto-configuration",
      "type": "org.apache.camel.component.pulsar.utils.AutoConfiguration",
      "description": "The pulsar auto configuration. The option is a org.apache.camel.component.pulsar.utils.AutoConfiguration type.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.pulsar.batcher-builder",
      "type": "org.apache.pulsar.client.api.BatcherBuilder",
      "description": "Control batching method used by the producer. The option is a org.apache.pulsar.client.api.BatcherBuilder type.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.batching-enabled",
      "type": "java.lang.Boolean",
      "description": "Control whether automatic batching of messages is enabled for the producer.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.pulsar.batching-max-messages",
      "type": "java.lang.Integer",
      "description": "The maximum size to batch messages.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": 1000
    },
    {
      "name": "camel.component.pulsar.batching-max-publish-delay-micros",
      "type": "java.lang.Long",
      "description": "The maximum time period within which the messages sent will be batched if batchingEnabled is true.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": 1000
    },
    {
      "name": "camel.component.pulsar.block-if-queue-full",
      "type": "java.lang.Boolean",
      "description": "Whether to block the producing thread if pending messages queue is full or to throw a ProducerQueueIsFullError",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.pulsar.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.pulsar.compression-type",
      "type": "org.apache.pulsar.client.api.CompressionType",
      "description": "Compression type to use",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.configuration",
      "type": "org.apache.camel.component.pulsar.PulsarConfiguration",
      "description": "Allows to pre-configure the Pulsar component with common options that the endpoints will reuse. The option is a org.apache.camel.component.pulsar.PulsarConfiguration type.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.consumer-name",
      "type": "java.lang.String",
      "description": "Name of the consumer when subscription is EXCLUSIVE",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": "sole-consumer"
    },
    {
      "name": "camel.component.pulsar.consumer-name-prefix",
      "type": "java.lang.String",
      "description": "Prefix to add to consumer names when a SHARED or FAILOVER subscription is used",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": "cons"
    },
    {
      "name": "camel.component.pulsar.consumer-queue-size",
      "type": "java.lang.Integer",
      "description": "Size of the consumer queue - defaults to 10",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": 10
    },
    {
      "name": "camel.component.pulsar.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.pulsar.dead-letter-topic",
      "type": "java.lang.String",
      "description": "Name of the topic where the messages which fail maxRedeliverCount times will be sent. Note: if not set, default topic name will be topicName-subscriptionName-DLQ",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the pulsar component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.initial-sequence-id",
      "type": "java.lang.Long",
      "description": "The first message published will have a sequence Id of initialSequenceId 1.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": -1
    },
    {
      "name": "camel.component.pulsar.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.pulsar.max-pending-messages",
      "type": "java.lang.Integer",
      "description": "Size of the pending massages queue. When the queue is full, by default, any further sends will fail unless blockIfQueueFull=true",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": 1000
    },
    {
      "name": "camel.component.pulsar.max-redeliver-count",
      "type": "java.lang.Integer",
      "description": "Maximum number of times that a message will be redelivered before being sent to the dead letter queue. If this value is not set, no Dead Letter Policy will be created",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.message-listener",
      "type": "java.lang.Boolean",
      "description": "Whether to use the messageListener interface, or to receive messages using a separate thread pool",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.pulsar.message-router",
      "type": "org.apache.pulsar.client.api.MessageRouter",
      "description": "Custom Message Router to use. The option is a org.apache.pulsar.client.api.MessageRouter type.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.message-routing-mode",
      "type": "org.apache.pulsar.client.api.MessageRoutingMode",
      "description": "Message Routing Mode to use",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.negative-ack-redelivery-backoff",
      "type": "org.apache.pulsar.client.api.RedeliveryBackoff",
      "description": "RedeliveryBackoff to use for negative ack redelivery backoff. The option is a org.apache.pulsar.client.api.RedeliveryBackoff type.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.negative-ack-redelivery-delay-micros",
      "type": "java.lang.Long",
      "description": "Set the negative acknowledgement delay",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": 60000000
    },
    {
      "name": "camel.component.pulsar.number-of-consumer-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to receive and handle messages when using a separate thread pool",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": 1
    },
    {
      "name": "camel.component.pulsar.number-of-consumers",
      "type": "java.lang.Integer",
      "description": "Number of consumers - defaults to 1",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": 1
    },
    {
      "name": "camel.component.pulsar.producer-name",
      "type": "java.lang.String",
      "description": "Name of the producer. If unset, lets Pulsar select a unique identifier.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.pulsar-client",
      "type": "org.apache.pulsar.client.api.PulsarClient",
      "description": "The pulsar client. The option is a org.apache.pulsar.client.api.PulsarClient type.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.pulsar-message-receipt-factory",
      "type": "org.apache.camel.component.pulsar.PulsarMessageReceiptFactory",
      "description": "Provide a factory to create an alternate implementation of PulsarMessageReceipt. The option is a org.apache.camel.component.pulsar.PulsarMessageReceiptFactory type.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.read-compacted",
      "type": "java.lang.Boolean",
      "description": "Enable compacted topic reading.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.pulsar.send-timeout-ms",
      "type": "java.lang.Integer",
      "description": "Send timeout in milliseconds",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": 30000
    },
    {
      "name": "camel.component.pulsar.service-url",
      "type": "java.lang.String",
      "description": "The Pulsar Service URL to point while creating the client from URI",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.subscription-initial-position",
      "type": "org.apache.camel.component.pulsar.utils.consumers.SubscriptionInitialPosition",
      "description": "Control the initial position in the topic of a newly created subscription. Default is latest message.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.subscription-name",
      "type": "java.lang.String",
      "description": "Name of the subscription to use",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": "subs"
    },
    {
      "name": "camel.component.pulsar.subscription-topics-mode",
      "type": "org.apache.pulsar.client.api.RegexSubscriptionMode",
      "description": "Determines to which topics this consumer should be subscribed to - Persistent, Non-Persistent, or both. Only used with pattern subscriptions.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.subscription-type",
      "type": "org.apache.camel.component.pulsar.utils.consumers.SubscriptionType",
      "description": "Type of the subscription EXCLUSIVESHAREDFAILOVERKEY_SHARED, defaults to EXCLUSIVE",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration"
    },
    {
      "name": "camel.component.pulsar.topics-pattern",
      "type": "java.lang.Boolean",
      "description": "Whether the topic is a pattern (regular expression) that allows the consumer to subscribe to all matching topics in the namespace",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.pulsar.max-pending-messages-across-partitions",
      "type": "java.lang.Integer",
      "description": "The maximum number of pending messages for partitioned topics. The maxPendingMessages value will be reduced if (number of partitions maxPendingMessages) exceeds this value. Partitioned topics have a pending message queue for each partition.",
      "sourceType": "org.apache.camel.component.pulsar.springboot.PulsarComponentConfiguration",
      "defaultValue": 50000,
      "deprecated": true,
      "deprecation": {}
    }
  ],
  "hints": []
}