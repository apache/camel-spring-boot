{
  "groups": [
    {
      "name": "camel.component.milo-browse",
      "type": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    },
    {
      "name": "camel.component.milo-client",
      "type": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    },
    {
      "name": "camel.component.milo-server",
      "type": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.milo-browse.allowed-security-policies",
      "type": "java.lang.String",
      "description": "A set of allowed security policy URIs. Default is to accept all and use the highest.",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.application-name",
      "type": "java.lang.String",
      "description": "The application name",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration",
      "defaultValue": "Apache Camel adapter for Eclipse Milo"
    },
    {
      "name": "camel.component.milo-browse.application-uri",
      "type": "java.lang.String",
      "description": "The application URI",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration",
      "defaultValue": "http:\/\/camel.apache.org\/EclipseMilo\/Client"
    },
    {
      "name": "camel.component.milo-browse.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.milo-browse.channel-lifetime",
      "type": "java.lang.Long",
      "description": "Channel lifetime in milliseconds",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.client-id",
      "type": "java.lang.String",
      "description": "A virtual client id to force the creation of a new connection instance",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.configuration",
      "type": "org.apache.camel.component.milo.client.MiloClientConfiguration",
      "description": "All default options for client configurations. The option is a org.apache.camel.component.milo.client.MiloClientConfiguration type.",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.milo-browse.discovery-endpoint-suffix",
      "type": "java.lang.String",
      "description": "A suffix for endpoint URI when discovering",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.discovery-endpoint-uri",
      "type": "java.lang.String",
      "description": "An alternative discovery URI",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the milo-browse component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.key-alias",
      "type": "java.lang.String",
      "description": "The name of the key in the keystore file",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.key-password",
      "type": "java.lang.String",
      "description": "The key password",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.key-store-password",
      "type": "java.lang.String",
      "description": "The keystore password",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.key-store-type",
      "type": "java.lang.String",
      "description": "The key store type",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.key-store-url",
      "type": "java.lang.String",
      "description": "The URL where the key should be loaded from",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.milo-browse.max-pending-publish-requests",
      "type": "java.lang.Long",
      "description": "The maximum number of pending publish requests",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.max-response-message-size",
      "type": "java.lang.Long",
      "description": "The maximum number of bytes a response message may have",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.milo-client-connection-manager",
      "type": "org.apache.camel.component.milo.client.MiloClientConnectionManager",
      "description": "Instance for managing client connections. The option is a org.apache.camel.component.milo.client.MiloClientConnectionManager type.",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.override-host",
      "type": "java.lang.Boolean",
      "description": "Override the server reported endpoint host with the host from the endpoint URI.",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.milo-browse.product-uri",
      "type": "java.lang.String",
      "description": "The product URI",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration",
      "defaultValue": "http:\/\/camel.apache.org\/EclipseMilo"
    },
    {
      "name": "camel.component.milo-browse.request-timeout",
      "type": "java.lang.Long",
      "description": "Request timeout in milliseconds",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.requested-publishing-interval",
      "type": "java.lang.Double",
      "description": "The requested publishing interval in milliseconds",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.session-name",
      "type": "java.lang.String",
      "description": "Session name",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-browse.session-timeout",
      "type": "java.lang.Long",
      "description": "Session timeout in milliseconds",
      "sourceType": "org.apache.camel.component.milo.browse.springboot.MiloBrowseComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.allowed-security-policies",
      "type": "java.lang.String",
      "description": "A set of allowed security policy URIs. Default is to accept all and use the highest.",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.application-name",
      "type": "java.lang.String",
      "description": "The application name",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration",
      "defaultValue": "Apache Camel adapter for Eclipse Milo"
    },
    {
      "name": "camel.component.milo-client.application-uri",
      "type": "java.lang.String",
      "description": "The application URI",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration",
      "defaultValue": "http:\/\/camel.apache.org\/EclipseMilo\/Client"
    },
    {
      "name": "camel.component.milo-client.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.milo-client.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions (if possible) occurred while the Camel consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. Important: This is only possible if the 3rd party component allows Camel to be alerted if an exception was thrown. Some components handle this internally only, and therefore bridgeErrorHandler is not possible. In other situations we may improve the Camel component to hook into the 3rd party component and make this possible for future releases. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.milo-client.channel-lifetime",
      "type": "java.lang.Long",
      "description": "Channel lifetime in milliseconds",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.client-id",
      "type": "java.lang.String",
      "description": "A virtual client id to force the creation of a new connection instance",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.configuration",
      "type": "org.apache.camel.component.milo.client.MiloClientConfiguration",
      "description": "All default options for client configurations. The option is a org.apache.camel.component.milo.client.MiloClientConfiguration type.",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.milo-client.discovery-endpoint-suffix",
      "type": "java.lang.String",
      "description": "A suffix for endpoint URI when discovering",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.discovery-endpoint-uri",
      "type": "java.lang.String",
      "description": "An alternative discovery URI",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the milo-client component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.key-alias",
      "type": "java.lang.String",
      "description": "The name of the key in the keystore file",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.key-password",
      "type": "java.lang.String",
      "description": "The key password",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.key-store-password",
      "type": "java.lang.String",
      "description": "The keystore password",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.key-store-type",
      "type": "java.lang.String",
      "description": "The key store type",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.key-store-url",
      "type": "java.lang.String",
      "description": "The URL where the key should be loaded from",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.milo-client.max-pending-publish-requests",
      "type": "java.lang.Long",
      "description": "The maximum number of pending publish requests",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.max-response-message-size",
      "type": "java.lang.Long",
      "description": "The maximum number of bytes a response message may have",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.milo-client-connection-manager",
      "type": "org.apache.camel.component.milo.client.MiloClientConnectionManager",
      "description": "Instance for managing client connections. The option is a org.apache.camel.component.milo.client.MiloClientConnectionManager type.",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.override-host",
      "type": "java.lang.Boolean",
      "description": "Override the server reported endpoint host with the host from the endpoint URI.",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.milo-client.product-uri",
      "type": "java.lang.String",
      "description": "The product URI",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration",
      "defaultValue": "http:\/\/camel.apache.org\/EclipseMilo"
    },
    {
      "name": "camel.component.milo-client.request-timeout",
      "type": "java.lang.Long",
      "description": "Request timeout in milliseconds",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.requested-publishing-interval",
      "type": "java.lang.Double",
      "description": "The requested publishing interval in milliseconds",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.session-name",
      "type": "java.lang.String",
      "description": "Session name",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-client.session-timeout",
      "type": "java.lang.Long",
      "description": "Session timeout in milliseconds",
      "sourceType": "org.apache.camel.component.milo.client.springboot.MiloClientComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.application-name",
      "type": "java.lang.String",
      "description": "The application name",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.application-uri",
      "type": "java.lang.String",
      "description": "The application URI",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.milo-server.bind-addresses",
      "type": "java.lang.String",
      "description": "Set the addresses of the local addresses the server should bind to",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions (if possible) occurred while the Camel consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. Important: This is only possible if the 3rd party component allows Camel to be alerted if an exception was thrown. Some components handle this internally only, and therefore bridgeErrorHandler is not possible. In other situations we may improve the Camel component to hook into the 3rd party component and make this possible for future releases. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.milo-server.build-info",
      "type": "org.eclipse.milo.opcua.stack.core.types.structured.BuildInfo",
      "description": "Server build info. The option is a org.eclipse.milo.opcua.stack.core.types.structured.BuildInfo type.",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.certificate",
      "type": "java.security.cert.X509Certificate",
      "description": "Server certificate. The option is a java.security.cert.X509Certificate type.",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.certificate-manager",
      "type": "org.eclipse.milo.opcua.stack.core.security.CertificateManager",
      "description": "Server certificate manager. The option is a org.eclipse.milo.opcua.stack.core.security.CertificateManager type.",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.certificate-validator",
      "type": "org.eclipse.milo.opcua.stack.core.security.CertificateValidator",
      "description": "Validator for client certificates. The option is a org.eclipse.milo.opcua.stack.core.security.CertificateValidator type.",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.milo-server.default-certificate-validator",
      "type": "java.lang.String",
      "description": "Validator for client certificates using default file based approach",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.enable-anonymous-authentication",
      "type": "java.lang.Boolean",
      "description": "Enable anonymous authentication, disabled by default",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.milo-server.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the milo-server component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.milo-server.namespace-uri",
      "type": "java.lang.String",
      "description": "The URI of the namespace, defaults to urn:org:apache:camel",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration",
      "defaultValue": "urn:org:apache:camel"
    },
    {
      "name": "camel.component.milo-server.path",
      "type": "java.lang.String",
      "description": "The path to be appended to the end of the endpoint url. (doesn't need to start with '\/')",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.port",
      "type": "java.lang.Integer",
      "description": "The TCP port the server binds to",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.product-uri",
      "type": "java.lang.String",
      "description": "The product URI",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.security-policies",
      "type": "java.util.Set<org.eclipse.milo.opcua.stack.core.security.SecurityPolicy>",
      "description": "Security policies",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.security-policies-by-id",
      "type": "java.lang.String",
      "description": "Security policies by URI or name. Multiple policies can be separated by comma.",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.user-authentication-credentials",
      "type": "java.lang.String",
      "description": "Set user password combinations in the form of user1:pwd1,user2:pwd2 Usernames and passwords will be URL decoded",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    },
    {
      "name": "camel.component.milo-server.username-security-policy-uri",
      "type": "org.eclipse.milo.opcua.stack.core.security.SecurityPolicy",
      "description": "Set the UserTokenPolicy used when",
      "sourceType": "org.apache.camel.component.milo.server.springboot.MiloServerComponentConfiguration"
    }
  ],
  "hints": [],
  "ignored": {
    "properties": []
  }
}