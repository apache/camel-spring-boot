{
  "groups": [
    {
      "name": "camel.component.aws-sqs",
      "type": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.aws-sqs.access-key",
      "type": "java.lang.String",
      "description": "Amazon AWS Access Key",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.amazon-a-w-s-host",
      "type": "java.lang.String",
      "description": "The hostname of the Amazon AWS cloud.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": "amazonaws.com"
    },
    {
      "name": "camel.component.aws-sqs.amazon-s-q-s-client",
      "type": "com.amazonaws.services.sqs.AmazonSQS",
      "description": "To use the AmazonSQS as client. The option is a com.amazonaws.services.sqs.AmazonSQS type.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.attribute-names",
      "type": "java.lang.String",
      "description": "A list of attribute names to receive when consuming. Multiple names can be separated by comma.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.auto-create-queue",
      "type": "java.lang.Boolean",
      "description": "Setting the autocreation of the queue",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.aws-sqs.auto-discover-client",
      "type": "java.lang.Boolean",
      "description": "Setting the autoDiscoverClient mechanism, if true, the component will look for a client instance in the registry automatically otherwise it will skip that checking.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.aws-sqs.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.aws-sqs.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws-sqs.concurrent-consumers",
      "type": "java.lang.Integer",
      "description": "Allows you to use multiple threads to poll the sqs queue to increase throughput",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": 1
    },
    {
      "name": "camel.component.aws-sqs.configuration",
      "type": "org.apache.camel.component.aws.sqs.SqsConfiguration",
      "description": "The component configuration. The option is a org.apache.camel.component.aws.sqs.SqsConfiguration type.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.aws-sqs.default-visibility-timeout",
      "type": "java.lang.Integer",
      "description": "The default visibility timeout (in seconds)",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.delay-queue",
      "type": "java.lang.Boolean",
      "description": "Define if you want to apply delaySeconds option to the queue or on single messages",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws-sqs.delay-seconds",
      "type": "java.lang.Integer",
      "description": "Delay sending messages for a number of seconds.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.delete-after-read",
      "type": "java.lang.Boolean",
      "description": "Delete message from SQS after it has been read",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.aws-sqs.delete-if-filtered",
      "type": "java.lang.Boolean",
      "description": "Whether or not to send the DeleteMessage to the SQS queue if an exchange fails to get through a filter. If 'false' and exchange does not make it through a Camel filter upstream in the route, then don't send DeleteMessage.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.aws-sqs.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the aws-sqs component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.extend-message-visibility",
      "type": "java.lang.Boolean",
      "description": "If enabled then a scheduled background task will keep extending the message visibility on SQS. This is needed if it takes a long time to process the message. If set to true defaultVisibilityTimeout must be set. See details at Amazon docs.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws-sqs.kms-data-key-reuse-period-seconds",
      "type": "java.lang.Integer",
      "description": "The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). Default: 300 (5 minutes).",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.kms-master-key-id",
      "type": "java.lang.String",
      "description": "The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws-sqs.maximum-message-size",
      "type": "java.lang.Integer",
      "description": "The maximumMessageSize (in bytes) an SQS message can contain for this queue.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.message-attribute-names",
      "type": "java.lang.String",
      "description": "A list of message attribute names to receive when consuming. Multiple names can be separated by comma.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.message-deduplication-id-strategy",
      "type": "java.lang.String",
      "description": "Only for FIFO queues. Strategy for setting the messageDeduplicationId on the message. Can be one of the following options: useExchangeId, useContentBasedDeduplication. For the useContentBasedDeduplication option, no messageDeduplicationId will be set on the message.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": "useExchangeId"
    },
    {
      "name": "camel.component.aws-sqs.message-group-id-strategy",
      "type": "java.lang.String",
      "description": "Only for FIFO queues. Strategy for setting the messageGroupId on the message. Can be one of the following options: useConstant, useExchangeId, usePropertyValue. For the usePropertyValue option, the value of property CamelAwsMessageGroupId will be used.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.message-retention-period",
      "type": "java.lang.Integer",
      "description": "The messageRetentionPeriod (in seconds) a message will be retained by SQS for this queue.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.operation",
      "type": "org.apache.camel.component.aws.sqs.SqsOperations",
      "description": "The operation to do in case the user don't want to send only a message",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.policy",
      "type": "java.lang.String",
      "description": "The policy for this queue",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.protocol",
      "type": "java.lang.String",
      "description": "The underlying protocol used to communicate with SQS",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": "https"
    },
    {
      "name": "camel.component.aws-sqs.proxy-host",
      "type": "java.lang.String",
      "description": "To define a proxy host when instantiating the SQS client",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.proxy-port",
      "type": "java.lang.Integer",
      "description": "To define a proxy port when instantiating the SQS client",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.proxy-protocol",
      "type": "com.amazonaws.Protocol",
      "description": "To define a proxy protocol when instantiating the SQS client",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.queue-owner-a-w-s-account-id",
      "type": "java.lang.String",
      "description": "Specify the queue owner aws account id when you need to connect the queue with different account owner.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.queue-url",
      "type": "java.lang.String",
      "description": "To define the queueUrl explicitly. All other parameters, which would influence the queueUrl, are ignored. This parameter is intended to be used, to connect to a mock implementation of SQS, for testing purposes.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.receive-message-wait-time-seconds",
      "type": "java.lang.Integer",
      "description": "If you do not specify WaitTimeSeconds in the request, the queue attribute ReceiveMessageWaitTimeSeconds is used to determine how long to wait.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.redrive-policy",
      "type": "java.lang.String",
      "description": "Specify the policy that send message to DeadLetter queue. See detail at Amazon docs.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.region",
      "type": "java.lang.String",
      "description": "Specify the queue region which could be used with queueOwnerAWSAccountId to build the service URL. When using this parameter, the configuration will expect the capitalized name of the region (for example AP_EAST_1) You'll need to use the name Regions.EU_WEST_1.name()",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.secret-key",
      "type": "java.lang.String",
      "description": "Amazon AWS Secret Key",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.server-side-encryption-enabled",
      "type": "java.lang.Boolean",
      "description": "Define if Server Side Encryption is enabled or not on the queue",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.aws-sqs.visibility-timeout",
      "type": "java.lang.Integer",
      "description": "The duration (in seconds) that the received messages are hidden from subsequent retrieve requests after being retrieved by a ReceiveMessage request to set in the com.amazonaws.services.sqs.model.SetQueueAttributesRequest. This only make sense if its different from defaultVisibilityTimeout. It changes the queue visibility timeout attribute permanently.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    },
    {
      "name": "camel.component.aws-sqs.wait-time-seconds",
      "type": "java.lang.Integer",
      "description": "Duration in seconds (0 to 20) that the ReceiveMessage action call will wait until a message is in the queue to include in the response.",
      "sourceType": "org.apache.camel.component.aws.sqs.springboot.SqsComponentConfiguration"
    }
  ],
  "hints": []
}