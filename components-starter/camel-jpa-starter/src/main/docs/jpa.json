{
  "groups": [
    {
      "name": "camel.component.jpa",
      "type": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration",
      "sourceType": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration"
    },
    {
      "name": "camel.component.jpa.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.jpa.aliases",
      "type": "java.util.Map<java.lang.String,java.lang.Class<java.lang.Object>>",
      "description": "Maps an alias to a JPA entity class. The alias can then be used in the endpoint URI (instead of the fully qualified class name).",
      "sourceType": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration"
    },
    {
      "name": "camel.component.jpa.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.jpa.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.jpa.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.jpa.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the jpa component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration"
    },
    {
      "name": "camel.component.jpa.entity-manager-factory",
      "type": "javax.persistence.EntityManagerFactory",
      "description": "To use the EntityManagerFactory. This is strongly recommended to configure. The option is a javax.persistence.EntityManagerFactory type.",
      "sourceType": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration"
    },
    {
      "name": "camel.component.jpa.join-transaction",
      "type": "java.lang.Boolean",
      "description": "The camel-jpa component will join transaction by default. You can use this option to turn this off, for example if you use LOCAL_RESOURCE and join transaction doesn't work with your JPA provider. This option can also be set globally on the JpaComponent, instead of having to set it on all endpoints.",
      "sourceType": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.jpa.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.jpa.shared-entity-manager",
      "type": "java.lang.Boolean",
      "description": "Whether to use Spring's SharedEntityManager for the consumer\/producer. Note in most cases joinTransaction should be set to false as this is not an EXTENDED EntityManager.",
      "sourceType": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.jpa.transaction-manager",
      "type": "org.springframework.transaction.PlatformTransactionManager",
      "description": "To use the PlatformTransactionManager for managing transactions. The option is a org.springframework.transaction.PlatformTransactionManager type.",
      "sourceType": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration"
    },
    {
      "name": "camel.component.jpa.transaction-strategy",
      "type": "org.apache.camel.component.jpa.TransactionStrategy",
      "description": "To use the TransactionStrategy for running the operations in a transaction. The option is a org.apache.camel.component.jpa.TransactionStrategy type.",
      "sourceType": "org.apache.camel.component.jpa.springboot.JpaComponentConfiguration"
    }
  ],
  "hints": []
}