{
  "groups": [
    {
      "name": "camel.component.azure-storage-queue",
      "type": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-queue.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.azure-storage-queue.access-key",
      "type": "java.lang.String",
      "description": "Access key for the associated azure account name to be used for authentication with azure queue services",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-queue.auto-discover-client",
      "type": "java.lang.Boolean",
      "description": "Setting the autoDiscoverClient mechanism, if true, the component will look for a client instance in the registry automatically otherwise it will skip that checking.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-storage-queue.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-storage-queue.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.azure-storage-queue.configuration",
      "type": "org.apache.camel.component.azure.storage.queue.QueueConfiguration",
      "description": "The component configurations. The option is a org.apache.camel.component.azure.storage.queue.QueueConfiguration type.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-queue.create-queue",
      "type": "java.lang.Boolean",
      "description": "When is set to true, the queue will be automatically created when sending messages to the queue.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-storage-queue.credentials",
      "type": "com.azure.storage.common.StorageSharedKeyCredential",
      "description": "StorageSharedKeyCredential can be injected to create the azure client, this holds the important authentication information. The option is a com.azure.storage.common.StorageSharedKeyCredential type.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-queue.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.azure-storage-queue.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the azure-storage-queue component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-queue.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.azure-storage-queue.max-messages",
      "type": "java.lang.Integer",
      "description": "Maximum number of messages to get, if there are less messages exist in the queue than requested all the messages will be returned. If left empty only 1 message will be retrieved, the allowed range is 1 to 32 messages.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration",
      "defaultValue": 1
    },
    {
      "name": "camel.component.azure-storage-queue.message-id",
      "type": "java.lang.String",
      "description": "The ID of the message to be deleted or updated.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-queue.operation",
      "type": "org.apache.camel.component.azure.storage.queue.QueueOperationDefinition",
      "description": "Queue service operation hint to the producer",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-queue.pop-receipt",
      "type": "java.lang.String",
      "description": "Unique identifier that must match for the message to be deleted or updated.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-queue.service-client",
      "type": "com.azure.storage.queue.QueueServiceClient",
      "description": "Service client to a storage account to interact with the queue service. This client does not hold any state about a particular storage account but is instead a convenient way of sending off appropriate requests to the resource on the service. This client contains all the operations for interacting with a queue account in Azure Storage. Operations allowed by the client are creating, listing, and deleting queues, retrieving and updating properties of the account, and retrieving statistics of the account. The option is a com.azure.storage.queue.QueueServiceClient type.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-queue.time-to-live",
      "type": "java.time.Duration",
      "description": "How long the message will stay alive in the queue. If unset the value will default to 7 days, if -1 is passed the message will not expire. The time to live must be -1 or any positive number. The format should be in this form: PnDTnHnMn.nS., e.g: PT20.345S -- parses as 20.345 seconds, P2D -- parses as 2 days However, in case you are using EndpointDsl\/ComponentDsl, you can do something like Duration.ofSeconds() since these Java APIs are typesafe. The option is a java.time.Duration type.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-queue.timeout",
      "type": "java.time.Duration",
      "description": "An optional timeout applied to the operation. If a response is not returned before the timeout concludes a RuntimeException will be thrown. The option is a java.time.Duration type.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration"
    },
    {
      "name": "camel.component.azure-storage-queue.visibility-timeout",
      "type": "java.time.Duration",
      "description": "The timeout period for how long the message is invisible in the queue. The timeout must be between 1 seconds and 7 days. The format should be in this form: PnDTnHnMn.nS., e.g: PT20.345S -- parses as 20.345 seconds, P2D -- parses as 2 days However, in case you are using EndpointDsl\/ComponentDsl, you can do something like Duration.ofSeconds() since these Java APIs are typesafe. The option is a java.time.Duration type.",
      "sourceType": "org.apache.camel.component.azure.storage.queue.springboot.QueueComponentConfiguration"
    }
  ],
  "hints": []
}