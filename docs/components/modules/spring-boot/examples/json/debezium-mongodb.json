{
  "groups": [
    {
      "name": "camel.component.debezium-mongodb",
      "type": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.debezium-mongodb.additional-properties",
      "type": "java.util.Map<java.lang.String,java.lang.Object>",
      "description": "Additional properties for debezium components in case they can't be set directly on the camel configurations (e.g: setting Kafka Connect properties needed by Debezium engine, for example setting KafkaOffsetBackingStore), the properties have to be prefixed with additionalProperties.. E.g: additionalProperties.transactional.id=12345&additionalProperties.schema.registry.url=http:\/\/localhost:8811\/avro",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.debezium-mongodb.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.debezium-mongodb.collection-exclude-list",
      "type": "java.lang.String",
      "description": "A comma-separated list of regular expressions that match the collection names for which changes are to be excluded",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.collection-include-list",
      "type": "java.lang.String",
      "description": "A comma-separated list of regular expressions that match the collection names for which changes are to be captured",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.configuration",
      "type": "org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration",
      "description": "Allow pre-configured Configurations to be set. The option is a org.apache.camel.component.debezium.configuration.MongoDbConnectorEmbeddedDebeziumConfiguration type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.connect-backoff-initial-delay-ms",
      "type": "java.lang.Long",
      "description": "The initial delay when trying to reconnect to a primary after a connection cannot be made or when no primary is available, given in milliseconds. Defaults to 1 second (1,000 ms). The option is a long type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 1000
    },
    {
      "name": "camel.component.debezium-mongodb.connect-backoff-max-delay-ms",
      "type": "java.lang.Long",
      "description": "The maximum delay when trying to reconnect to a primary after a connection cannot be made or when no primary is available, given in milliseconds. Defaults to 120 second (120,000 ms). The option is a long type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 120000
    },
    {
      "name": "camel.component.debezium-mongodb.connect-max-attempts",
      "type": "java.lang.Integer",
      "description": "Maximum number of failed connection attempts to a replica set primary before an exception occurs and task is aborted. Defaults to 16, which with the defaults for 'connect.backoff.initial.delay.ms' and 'connect.backoff.max.delay.ms' results in just over 20 minutes of attempts before failing.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 16
    },
    {
      "name": "camel.component.debezium-mongodb.converters",
      "type": "java.lang.String",
      "description": "Optional list of custom converters that would be used instead of default ones. The converters are defined using '.type' config option and configured using options '.'",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.cursor-max-await-time-ms",
      "type": "java.lang.Integer",
      "description": "The maximum processing time in milliseconds to wait for the oplog cursor to process a single poll request. The option is a int type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.debezium-mongodb.database-exclude-list",
      "type": "java.lang.String",
      "description": "A comma-separated list of regular expressions that match the database names for which changes are to be excluded",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.database-history-file-filename",
      "type": "java.lang.String",
      "description": "The path to the file that will be used to record the database history",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.database-include-list",
      "type": "java.lang.String",
      "description": "A comma-separated list of regular expressions that match the database names for which changes are to be captured",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the debezium-mongodb component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.event-processing-failure-handling-mode",
      "type": "java.lang.String",
      "description": "Specify how failures during processing of events (i.e. when encountering a corrupted event) should be handled, including:'fail' (the default) an exception indicating the problematic event and its position is raised, causing the connector to be stopped; 'warn' the problematic event and its position will be logged and the event will be skipped;'ignore' the problematic event will be skipped.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": "fail"
    },
    {
      "name": "camel.component.debezium-mongodb.field-exclude-list",
      "type": "java.lang.String",
      "description": "A comma-separated list of the fully-qualified names of fields that should be excluded from change event message values",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.field-renames",
      "type": "java.lang.String",
      "description": "A comma-separated list of the fully-qualified replacements of fields that should be used to rename fields in change event message values. Fully-qualified replacements for fields are of the form databaseName.collectionName.fieldName.nestedFieldName:newNestedFieldName, where databaseName and collectionName may contain the wildcard () which matches any characters, the colon character (:) is used to determine rename mapping of field.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.heartbeat-interval-ms",
      "type": "java.lang.Integer",
      "description": "Length of an interval in milli-seconds in in which the connector periodically sends heartbeat messages to a heartbeat topic. Use 0 to disable heartbeat messages. Disabled by default. The option is a int type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 0
    },
    {
      "name": "camel.component.debezium-mongodb.heartbeat-topics-prefix",
      "type": "java.lang.String",
      "description": "The prefix that is used to name heartbeat topics.Defaults to __debezium-heartbeat.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": "__debezium-heartbeat"
    },
    {
      "name": "camel.component.debezium-mongodb.internal-key-converter",
      "type": "java.lang.String",
      "description": "The Converter class that should be used to serialize and deserialize key data for offsets. The default is JSON converter.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": "org.apache.kafka.connect.json.JsonConverter"
    },
    {
      "name": "camel.component.debezium-mongodb.internal-value-converter",
      "type": "java.lang.String",
      "description": "The Converter class that should be used to serialize and deserialize value data for offsets. The default is JSON converter.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": "org.apache.kafka.connect.json.JsonConverter"
    },
    {
      "name": "camel.component.debezium-mongodb.max-batch-size",
      "type": "java.lang.Integer",
      "description": "Maximum size of each batch of source records. Defaults to 2048.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 2048
    },
    {
      "name": "camel.component.debezium-mongodb.max-queue-size",
      "type": "java.lang.Integer",
      "description": "Maximum size of the queue for change events read from the database log but not yet recorded or forwarded. Defaults to 8192, and should always be larger than the maximum batch size.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 8192
    },
    {
      "name": "camel.component.debezium-mongodb.max-queue-size-in-bytes",
      "type": "java.lang.Long",
      "description": "Maximum size of the queue in bytes for change events read from the database log but not yet recorded or forwarded. Defaults to 0. Mean the feature is not enabled",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 0
    },
    {
      "name": "camel.component.debezium-mongodb.mongodb-authsource",
      "type": "java.lang.String",
      "description": "Database containing user credentials.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": "admin"
    },
    {
      "name": "camel.component.debezium-mongodb.mongodb-connect-timeout-ms",
      "type": "java.lang.Integer",
      "description": "The connection timeout, given in milliseconds. Defaults to 10 seconds (10,000 ms). The option is a int type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 10000
    },
    {
      "name": "camel.component.debezium-mongodb.mongodb-hosts",
      "type": "java.lang.String",
      "description": "The hostname and port pairs (in the form 'host' or 'host:port') of the MongoDB server(s) in the replica set.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.mongodb-members-auto-discover",
      "type": "java.lang.Boolean",
      "description": "Specifies whether the addresses in 'hosts' are seeds that should be used to discover all members of the cluster or replica set ('true'), or whether the address(es) in 'hosts' should be used as is ('false'). The default is 'true'.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.debezium-mongodb.mongodb-name",
      "type": "java.lang.String",
      "description": "Unique name that identifies the MongoDB replica set or cluster and all recorded offsets, andthat is used as a prefix for all schemas and topics. Each distinct MongoDB installation should have a separate namespace and monitored by at most one Debezium connector.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.mongodb-password",
      "type": "java.lang.String",
      "description": "Password to be used when connecting to MongoDB, if necessary.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.mongodb-poll-interval-ms",
      "type": "java.lang.Long",
      "description": "Interval for looking for new, removed, or changed replica sets, given in milliseconds. Defaults to 30 seconds (30,000 ms). The option is a long type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 30000
    },
    {
      "name": "camel.component.debezium-mongodb.mongodb-server-selection-timeout-ms",
      "type": "java.lang.Integer",
      "description": "The server selection timeout, given in milliseconds. Defaults to 10 seconds (10,000 ms). The option is a int type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 30000
    },
    {
      "name": "camel.component.debezium-mongodb.mongodb-socket-timeout-ms",
      "type": "java.lang.Integer",
      "description": "The socket timeout, given in milliseconds. Defaults to 0 ms. The option is a int type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 0
    },
    {
      "name": "camel.component.debezium-mongodb.mongodb-ssl-enabled",
      "type": "java.lang.Boolean",
      "description": "Should connector use SSL to connect to MongoDB instances",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.debezium-mongodb.mongodb-ssl-invalid-hostname-allowed",
      "type": "java.lang.Boolean",
      "description": "Whether invalid host names are allowed when using SSL. If true the connection will not prevent man-in-the-middle attacks",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.debezium-mongodb.mongodb-user",
      "type": "java.lang.String",
      "description": "Database user for connecting to MongoDB, if necessary.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.offset-commit-policy",
      "type": "java.lang.String",
      "description": "The name of the Java class of the commit policy. It defines when offsets commit has to be triggered based on the number of events processed and the time elapsed since the last commit. This class must implement the interface 'OffsetCommitPolicy'. The default is a periodic commit policy based upon time intervals.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": "io.debezium.embedded.spi.OffsetCommitPolicy.PeriodicCommitOffsetPolicy"
    },
    {
      "name": "camel.component.debezium-mongodb.offset-commit-timeout-ms",
      "type": "java.lang.Long",
      "description": "Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt. The default is 5 seconds. The option is a long type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 5000
    },
    {
      "name": "camel.component.debezium-mongodb.offset-flush-interval-ms",
      "type": "java.lang.Long",
      "description": "Interval at which to try committing offsets. The default is 1 minute. The option is a long type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 60000
    },
    {
      "name": "camel.component.debezium-mongodb.offset-storage",
      "type": "java.lang.String",
      "description": "The name of the Java class that is responsible for persistence of connector offsets.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": "org.apache.kafka.connect.storage.FileOffsetBackingStore"
    },
    {
      "name": "camel.component.debezium-mongodb.offset-storage-file-name",
      "type": "java.lang.String",
      "description": "Path to file where offsets are to be stored. Required when offset.storage is set to the FileOffsetBackingStore.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.offset-storage-partitions",
      "type": "java.lang.Integer",
      "description": "The number of partitions used when creating the offset storage topic. Required when offset.storage is set to the 'KafkaOffsetBackingStore'.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.offset-storage-replication-factor",
      "type": "java.lang.Integer",
      "description": "Replication factor used when creating the offset storage topic. Required when offset.storage is set to the KafkaOffsetBackingStore",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.offset-storage-topic",
      "type": "java.lang.String",
      "description": "The name of the Kafka topic where offsets are to be stored. Required when offset.storage is set to the KafkaOffsetBackingStore.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.poll-interval-ms",
      "type": "java.lang.Long",
      "description": "Time to wait for new change events to appear after receiving no events, given in milliseconds. Defaults to 500 ms. The option is a long type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 500
    },
    {
      "name": "camel.component.debezium-mongodb.provide-transaction-metadata",
      "type": "java.lang.Boolean",
      "description": "Enables transaction metadata extraction together with event counting",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.debezium-mongodb.query-fetch-size",
      "type": "java.lang.Integer",
      "description": "The maximum number of records that should be loaded into memory while streaming. A value of 0 uses the default JDBC fetch size.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 0
    },
    {
      "name": "camel.component.debezium-mongodb.retriable-restart-connector-wait-ms",
      "type": "java.lang.Long",
      "description": "Time to wait before restarting connector after retriable exception occurs. Defaults to 10000ms. The option is a long type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 10000
    },
    {
      "name": "camel.component.debezium-mongodb.sanitize-field-names",
      "type": "java.lang.Boolean",
      "description": "Whether field names will be sanitized to Avro naming conventions",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.debezium-mongodb.signal-data-collection",
      "type": "java.lang.String",
      "description": "The name of the data collection that is used to send signals\/commands to Debezium. Signaling is disabled when not set.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.skipped-operations",
      "type": "java.lang.String",
      "description": "The comma-separated list of operations to skip during streaming, defined as: 'c' for inserts\/create; 'u' for updates; 'd' for deletes. By default, no operations will be skipped.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.snapshot-collection-filter-overrides",
      "type": "java.lang.String",
      "description": "This property contains a comma-separated list of ., for which the initial snapshot may be a subset of data present in the data source. The subset would be defined by mongodb filter query specified as value for property snapshot.collection.filter.override..",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.snapshot-delay-ms",
      "type": "java.lang.Long",
      "description": "A delay period before a snapshot will begin, given in milliseconds. Defaults to 0 ms. The option is a long type.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 0
    },
    {
      "name": "camel.component.debezium-mongodb.snapshot-fetch-size",
      "type": "java.lang.Integer",
      "description": "The maximum number of records that should be loaded into memory while performing a snapshot",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.snapshot-include-collection-list",
      "type": "java.lang.String",
      "description": "this setting must be set to specify a list of tables\/collections whose snapshot must be taken on creating or restarting the connector.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration"
    },
    {
      "name": "camel.component.debezium-mongodb.snapshot-max-threads",
      "type": "java.lang.Integer",
      "description": "The maximum number of threads used to perform the snapshot. Defaults to 1.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": 1
    },
    {
      "name": "camel.component.debezium-mongodb.snapshot-mode",
      "type": "java.lang.String",
      "description": "The criteria for running a snapshot upon startup of the connector. Options include: 'initial' (the default) to specify the connector should always perform an initial sync when required; 'never' to specify the connector should never perform an initial sync",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": "initial"
    },
    {
      "name": "camel.component.debezium-mongodb.source-struct-version",
      "type": "java.lang.String",
      "description": "A version of the format of the publicly visible source part in the message",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": "v2"
    },
    {
      "name": "camel.component.debezium-mongodb.tombstones-on-delete",
      "type": "java.lang.Boolean",
      "description": "Whether delete operations should be represented by a delete event and a subsquenttombstone event (true) or only by a delete event (false). Emitting the tombstone event (the default behavior) allows Kafka to completely delete all events pertaining to the given key once the source record got deleted.",
      "sourceType": "org.apache.camel.component.debezium.springboot.DebeziumMongodbComponentConfiguration",
      "defaultValue": false
    }
  ],
  "hints": []
}