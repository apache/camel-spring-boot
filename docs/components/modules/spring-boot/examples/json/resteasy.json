{
  "groups": [
    {
      "name": "camel.component.resteasy",
      "type": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration"
    },
    {
      "name": "camel.component.resteasy.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.resteasy.allow-java-serialized-object",
      "type": "java.lang.Boolean",
      "description": "Whether to allow java serialization when a request uses context-type=application\/x-java-serialized-object. This is by default turned off. If you enable this then be aware that Java will deserialize the incoming data from the request to Java and that can be a potential security risk.",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.resteasy.auth-caching-disabled",
      "type": "java.lang.Boolean",
      "description": "Disables authentication scheme caching",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.resteasy.automatic-retries-disabled",
      "type": "java.lang.Boolean",
      "description": "Disables automatic request recovery and re-execution",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.resteasy.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.resteasy.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.resteasy.connection-state-disabled",
      "type": "java.lang.Boolean",
      "description": "Disables connection state tracking",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.resteasy.content-compression-disabled",
      "type": "java.lang.Boolean",
      "description": "Disables automatic content decompression",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.resteasy.cookie-management-disabled",
      "type": "java.lang.Boolean",
      "description": "Disables state (cookie) management",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.resteasy.copy-headers",
      "type": "java.lang.Boolean",
      "description": "If this option is true then IN exchange headers will be copied to OUT exchange headers according to copy strategy. Setting this to false, allows to only include the headers from the HTTP response (not propagating IN headers).",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.resteasy.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.resteasy.default-user-agent-disabled",
      "type": "java.lang.Boolean",
      "description": "Disables the default user agent set by this builder if none has been provided by the user",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.resteasy.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the resteasy component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration"
    },
    {
      "name": "camel.component.resteasy.header-filter-strategy",
      "type": "org.apache.camel.spi.HeaderFilterStrategy",
      "description": "To use a custom org.apache.camel.spi.HeaderFilterStrategy to filter header to and from Camel message. The option is a org.apache.camel.spi.HeaderFilterStrategy type.",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration"
    },
    {
      "name": "camel.component.resteasy.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.resteasy.proxy-consumers-classes",
      "type": "java.lang.String",
      "description": "Proxy classes for consumer endpoints. Multiple classes can be separated by comma.",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration"
    },
    {
      "name": "camel.component.resteasy.redirect-handling-disabled",
      "type": "java.lang.Boolean",
      "description": "Disables automatic redirect handling",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.resteasy.response-payload-streaming-threshold",
      "type": "java.lang.Integer",
      "description": "This threshold in bytes controls whether the response payload should be stored in memory as a byte array or be streaming based. Set this to -1 to always use streaming mode.",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": 8192
    },
    {
      "name": "camel.component.resteasy.skip-request-headers",
      "type": "java.lang.Boolean",
      "description": "Whether to skip mapping all the Camel headers as HTTP request headers. If there are no data from Camel headers needed to be included in the HTTP request then this can avoid parsing overhead with many object allocations for the JVM garbage collector.",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.resteasy.skip-response-headers",
      "type": "java.lang.Boolean",
      "description": "Whether to skip mapping all the HTTP response headers to Camel headers. If there are no data needed from HTTP headers then this can avoid parsing overhead with many object allocations for the JVM garbage collector.",
      "sourceType": "org.apache.camel.component.resteasy.springboot.ResteasyComponentConfiguration",
      "defaultValue": false
    }
  ],
  "hints": []
}