{
  "groups": [
    {
      "name": "camel.component.hdfs",
      "type": "org.apache.camel.component.hdfs.springboot.HdfsComponentConfiguration",
      "sourceType": "org.apache.camel.component.hdfs.springboot.HdfsComponentConfiguration"
    },
    {
      "name": "camel.component.hdfs.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.hdfs.springboot.HdfsComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.hdfs.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.hdfs.springboot.HdfsComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.hdfs.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.hdfs.springboot.HdfsComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.hdfs.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.hdfs.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the hdfs component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.hdfs.springboot.HdfsComponentConfiguration"
    },
    {
      "name": "camel.component.hdfs.j-a-a-s-configuration",
      "type": "javax.security.auth.login.Configuration",
      "description": "To use the given configuration for security with JAAS. The option is a javax.security.auth.login.Configuration type.",
      "sourceType": "org.apache.camel.component.hdfs.springboot.HdfsComponentConfiguration"
    },
    {
      "name": "camel.component.hdfs.kerberos-config-file",
      "type": "java.lang.String",
      "description": "To use kerberos authentication, set the value of the 'java.security.krb5.conf' environment variable to an existing file. If the environment variable is already set, warn if different than the specified parameter",
      "sourceType": "org.apache.camel.component.hdfs.springboot.HdfsComponentConfiguration"
    },
    {
      "name": "camel.component.hdfs.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.hdfs.springboot.HdfsComponentConfiguration",
      "defaultValue": false
    }
  ],
  "hints": []
}