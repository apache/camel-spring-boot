{
  "groups": [
    {
      "name": "camel.component.azure-servicebus",
      "type": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.azure-servicebus.amqp-retry-options",
      "type": "com.azure.core.amqp.AmqpRetryOptions",
      "description": "Sets the retry options for Service Bus clients. If not specified, the default retry options are used. The option is a com.azure.core.amqp.AmqpRetryOptions type.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.amqp-transport-type",
      "type": "com.azure.core.amqp.AmqpTransportType",
      "description": "Sets the transport type by which all the communication with Azure Service Bus occurs. Default value is AmqpTransportType#AMQP.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-servicebus.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.azure-servicebus.client-options",
      "type": "com.azure.core.util.ClientOptions",
      "description": "Sets the ClientOptions to be sent from the client built from this builder, enabling customization of certain properties, as well as support the addition of custom header information. Refer to the ClientOptions documentation for more information. The option is a com.azure.core.util.ClientOptions type.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.configuration",
      "type": "org.apache.camel.component.azure.servicebus.ServiceBusConfiguration",
      "description": "The component configurations. The option is a org.apache.camel.component.azure.servicebus.ServiceBusConfiguration type.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.connection-string",
      "type": "java.lang.String",
      "description": "Sets the connection string for a Service Bus namespace or a specific Service Bus resource.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.consumer-operation",
      "type": "org.apache.camel.component.azure.servicebus.ServiceBusConsumerOperationDefinition",
      "description": "Sets the desired operation to be used in the consumer",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.azure-servicebus.disable-auto-complete",
      "type": "java.lang.Boolean",
      "description": "Disables auto-complete and auto-abandon of received messages. By default, a successfully processed message is {link ServiceBusReceiverAsyncClient#complete(ServiceBusReceivedMessage) completed}. If an error happens when the message is processed, it is {link ServiceBusReceiverAsyncClient#abandon(ServiceBusReceivedMessage) abandoned}.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.azure-servicebus.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the azure-servicebus component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.azure-servicebus.max-auto-lock-renew-duration",
      "type": "java.time.Duration",
      "description": "Sets the amount of time to continue auto-renewing the lock. Setting Duration#ZERO or null disables auto-renewal. For {link ServiceBusReceiveMode#RECEIVE_AND_DELETE RECEIVE_AND_DELETE} mode, auto-renewal is disabled. The option is a java.time.Duration type.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.peek-num-max-messages",
      "type": "java.lang.Integer",
      "description": "Set the max number of messages to be peeked during the peek operation.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.prefetch-count",
      "type": "java.lang.Integer",
      "description": "Sets the prefetch count of the receiver. For both {link ServiceBusReceiveMode#PEEK_LOCK PEEK_LOCK} and {link ServiceBusReceiveMode#RECEIVE_AND_DELETE RECEIVE_AND_DELETE} modes the default value is 1. Prefetch speeds up the message flow by aiming to have a message readily available for local retrieval when and before the application asks for one using ServiceBusReceiverAsyncClient#receiveMessages(). Setting a non-zero value will prefetch that number of messages. Setting the value to zero turns prefetch off.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration",
      "defaultValue": 0
    },
    {
      "name": "camel.component.azure-servicebus.producer-operation",
      "type": "org.apache.camel.component.azure.servicebus.ServiceBusProducerOperationDefinition",
      "description": "Sets the desired operation to be used in the producer",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.proxy-options",
      "type": "com.azure.core.amqp.ProxyOptions",
      "description": "Sets the proxy configuration to use for ServiceBusSenderAsyncClient. When a proxy is configured, AmqpTransportType#AMQP_WEB_SOCKETS must be used for the transport type. The option is a com.azure.core.amqp.ProxyOptions type.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.receiver-async-client",
      "type": "com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient",
      "description": "Sets the receiverAsyncClient in order to consume messages in the Consumer. The option is a com.azure.messaging.servicebus.ServiceBusReceiverAsyncClient type.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.scheduled-enqueue-time",
      "type": "java.time.OffsetDateTime",
      "description": "Sets OffsetDateTime at which the message should appear in the Service Bus queue or topic. The option is a java.time.OffsetDateTime type.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.sender-async-client",
      "type": "com.azure.messaging.servicebus.ServiceBusSenderAsyncClient",
      "description": "Sets SenderAsyncClient to be used in the producer. The option is a com.azure.messaging.servicebus.ServiceBusSenderAsyncClient type.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.service-bus-receive-mode",
      "type": "com.azure.messaging.servicebus.models.ServiceBusReceiveMode",
      "description": "Sets the receive mode for the receiver.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.service-bus-transaction-context",
      "type": "com.azure.messaging.servicebus.ServiceBusTransactionContext",
      "description": "Represents transaction in service. This object just contains transaction id. The option is a com.azure.messaging.servicebus.ServiceBusTransactionContext type.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.service-bus-type",
      "type": "org.apache.camel.component.azure.servicebus.ServiceBusType",
      "description": "The service bus type of connection to execute. Queue is for typical queue option and topic for subscription based model.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.sub-queue",
      "type": "com.azure.messaging.servicebus.models.SubQueue",
      "description": "Sets the type of the SubQueue to connect to.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    },
    {
      "name": "camel.component.azure-servicebus.subscription-name",
      "type": "java.lang.String",
      "description": "Sets the name of the subscription in the topic to listen to. topicOrQueueName and serviceBusType=topic must also be set.",
      "sourceType": "org.apache.camel.component.azure.servicebus.springboot.ServiceBusComponentConfiguration"
    }
  ],
  "hints": []
}