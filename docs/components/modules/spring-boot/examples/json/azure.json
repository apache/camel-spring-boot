{
  "groups": [
    {
      "name": "camel.component.azure-blob",
      "type": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    },
    {
      "name": "camel.component.azure-queue",
      "type": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-queue.customizer",
      "type": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration",
      "sourceMethod": "getCustomizer()"
    }
  ],
  "properties": [
    {
      "name": "camel.component.azure-blob.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-blob.azure-blob-client",
      "type": "com.microsoft.azure.storage.blob.CloudBlob",
      "description": "The blob service client. The option is a com.microsoft.azure.storage.blob.CloudBlob type.",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.blob-metadata",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Set the blob meta-data",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.blob-offset",
      "type": "java.lang.Long",
      "description": "Set the blob offset for the upload or download operations, default is 0",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration",
      "defaultValue": 0
    },
    {
      "name": "camel.component.azure-blob.blob-prefix",
      "type": "java.lang.String",
      "description": "Set a prefix which can be used for listing the blobs",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.blob-type",
      "type": "org.apache.camel.component.azure.blob.BlobType",
      "description": "Set a blob type, 'blockblob' is default",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.azure-blob.close-stream-after-read",
      "type": "java.lang.Boolean",
      "description": "Close the stream after read or keep it open, default is true",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-blob.close-stream-after-write",
      "type": "java.lang.Boolean",
      "description": "Close the stream after write or keep it open, default is true",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-blob.configuration",
      "type": "org.apache.camel.component.azure.blob.BlobServiceConfiguration",
      "description": "The Blob Service configuration. The option is a org.apache.camel.component.azure.blob.BlobServiceConfiguration type.",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.credentials",
      "type": "com.microsoft.azure.storage.StorageCredentials",
      "description": "Set the storage credentials, required in most cases. The option is a com.microsoft.azure.storage.StorageCredentials type.",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.credentials-account-key",
      "type": "java.lang.String",
      "description": "Set the storage account key used during authentication phase",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.credentials-account-name",
      "type": "java.lang.String",
      "description": "Set the storage account name used during authentication phase",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.azure-blob.data-length",
      "type": "java.lang.Long",
      "description": "Set the data length for the download or page blob upload operations",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the azure-blob component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.file-dir",
      "type": "java.lang.String",
      "description": "Set the file directory where the downloaded blobs will be saved to",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.azure-blob.operation",
      "type": "org.apache.camel.component.azure.blob.BlobServiceOperations",
      "description": "Blob service operation hint to the producer",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.public-for-read",
      "type": "java.lang.Boolean",
      "description": "Storage resources can be public for reading their content, if this property is enabled then the credentials do not have to be set",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.azure-blob.stream-read-size",
      "type": "java.lang.Integer",
      "description": "Set the minimum read size in bytes when reading the blob content",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.stream-write-size",
      "type": "java.lang.Integer",
      "description": "Set the size of the buffer for writing block and page blocks",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-blob.use-flat-listing",
      "type": "java.lang.Boolean",
      "description": "Specify if the flat or hierarchical blob listing should be used",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-blob.validate-client-u-r-i",
      "type": "java.lang.Boolean",
      "description": "Whether to validate the Azure client URI",
      "sourceType": "org.apache.camel.component.azure.blob.springboot.BlobServiceComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-queue.autowired-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether autowiring is enabled. This is used for automatic autowiring options (the option must be marked as autowired) by looking up in the registry to find if there is a single instance of matching type, which then gets configured on the component. This can be used for automatic configuring JDBC data sources, JMS connection factories, AWS Clients, etc.",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration",
      "defaultValue": true
    },
    {
      "name": "camel.component.azure-queue.azure-queue-client",
      "type": "com.microsoft.azure.storage.queue.CloudQueue",
      "description": "The queue service client. The option is a com.microsoft.azure.storage.queue.CloudQueue type.",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-queue.bridge-error-handler",
      "type": "java.lang.Boolean",
      "description": "Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored.",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.azure-queue.configuration",
      "type": "org.apache.camel.component.azure.queue.QueueServiceConfiguration",
      "description": "The Queue Service configuration. The option is a org.apache.camel.component.azure.queue.QueueServiceConfiguration type.",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-queue.credentials",
      "type": "com.microsoft.azure.storage.StorageCredentials",
      "description": "Set the storage credentials, required in most cases. The option is a com.microsoft.azure.storage.StorageCredentials type.",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-queue.credentials-account-key",
      "type": "java.lang.String",
      "description": "Set the storage account key used during authentication phase",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-queue.credentials-account-name",
      "type": "java.lang.String",
      "description": "Set the storage account name used during authentication phase",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-queue.customizer.enabled",
      "type": "java.lang.Boolean",
      "sourceType": "org.apache.camel.spring.boot.ComponentConfigurationPropertiesCommon$CustomizerProperties"
    },
    {
      "name": "camel.component.azure-queue.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable auto configuration of the azure-queue component. This is enabled by default.",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-queue.lazy-start-producer",
      "type": "java.lang.Boolean",
      "description": "Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing.",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration",
      "defaultValue": false
    },
    {
      "name": "camel.component.azure-queue.message-time-to-live",
      "type": "java.lang.Integer",
      "description": "Message Time To Live in seconds",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-queue.message-visibility-delay",
      "type": "java.lang.Integer",
      "description": "Message Visibility Delay in seconds",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-queue.operation",
      "type": "org.apache.camel.component.azure.queue.QueueServiceOperations",
      "description": "Queue service operation hint to the producer",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-queue.queue-prefix",
      "type": "java.lang.String",
      "description": "Set a prefix which can be used for listing the queues",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration"
    },
    {
      "name": "camel.component.azure-queue.validate-client-u-r-i",
      "type": "java.lang.Boolean",
      "description": "Whether to validate the Azure client URI",
      "sourceType": "org.apache.camel.component.azure.queue.springboot.QueueServiceComponentConfiguration",
      "defaultValue": true
    }
  ],
  "hints": []
}